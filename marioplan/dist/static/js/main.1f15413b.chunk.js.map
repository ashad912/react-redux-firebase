{"version":3,"sources":["components/extras/video.mp4","components/extras/Canvas.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/extras/ExtraContent.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/extras/ActionBar.js","store/actions/canvasActions.js","components/extras/LoadPhotoBox.js","components/extras/PointList.js","components/extras/Slider.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/canvasReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","__webpack_require__","p","m","connect","state","initials","firebase","profile","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","SignedOutLinks","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectLists","projects","projectList","projects_ProjectSummary","ExtraContent","dimensions","active","handleResize","_this","setState","width","container","offsetWidth","height","handleButton","renderVideo","controls","src","video","this","window","addEventListener","removeEventListener","_this2","buttonArea","ref","el","Component","Dashboard","console","log","ProjectList","dashboard_Notifications","extras_ExtraContent","react_router","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","Object","defineProperty","target","value","handleSumbit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","ActionBar","handleMode","mode","changeMode","classes","toggleContainer","ToggleButtonGroup_default","exclusive","ToggleButton_default","class","canvas","withStyles","theme","padding","concat","spacing","unit","display","alignItems","justifyContent","margin","allowedFileTypes","fileIsIncorrectFiletype","file","indexOf","LoadPhotoBox","react_simple_file_input_default","accept","readAs","onLoadStart","onLoad","cancelIf","PointList","points","deletePoint","pointList","point","name","x","y","VirtualizeSwipeableViews","bindKeyboard","virtualize","SwipeableViews","stylesSlides","minHeight","color","backgroundColor","Slider","slideIndex","handleChangeSlideIndex","switchNewAppState","newIndex","updateAppState","handleSlideBack","currentIndex","handleSlideNext","exported","handleDeletePoint","newSample","handleExport","exportResults","results","exportString","index","onChangeIndex","slideRenderer","style","extras_PointList","positionPoints","tragusPoints","handleExtremes","extremePoints","makeContent","mod","nextButton","length","nextButtonConditions","backButton","assign","slice","appState","Promise","resolve","reject","Matrix","require","Canvas","ctx","canvasWidth","canvasHeight","myImg","theta","baseId","canvasOffset","lastClick","selectedPoint","selectedPointName","pointisMoved","movingEnded","previousOffset","imageLoaded","scriptLoaded","handleScriptLoad","handleOpenCVLoad","handleFileSelected","event","number","image","Image","result","URL","createObjectURL","onload","updatePoints","loading","refs","newCanvas","getContext","setAttribute","naturalImageWidth","naturalImageHeight","ratio","offsetX","offsetY","fileName","imageXRatio","imageYRatio","canvasOffsetXInit","canvasOffsetYInit","fillStyle","fillRect","drawImage","font","doThresholding","ctxMakeBackgroundAngImage","reset","clearRect","save","translate","rotate","restore","ctxMakePoint","beginPath","arc","Math","PI","fill","stroke","max","fillText","calculateAndCtxMakeLine","point1","point2","outYStart","outYEnd","outXStart","outXEnd","deltaX","b","xmax","moveTo","lineTo","handleMouseDown","mouse","getMousePos","toWorld","end","pointToMove","forEach","isBetween","pointIsMoved","activateMove","newPoints","toConsumableArray","refreshNames","drawLines","deleteLinesAndRefresh","filter","handleRotate","lastTwoPoints","upPoint","downPoint","atan","abs","translatedPoints","applyToArray","i","newPoint","handleCenterRestore","handleMouseMoveActive","handleMouseMove","offset","movingPoints","handleMouseUp","cv","imread","dst","Mat","zeros","rows","cols","CV_8UC3","cvtColor","COLOR_RGBA2GRAY","threshold","THRESH_BINARY","contours","MatVector","contoursExternal","hierarchy","hierarchyExternal","findContours","RETR_EXTERNAL","CHAIN_APPROX_SIMPLE","RETR_CCOMP","avoid","size","get","matSize","Scalar","round","random","drawContours","LINE_8","imshow","delete","isBlack","down","getImageData","posUp","posDown","isBreak","tragus","itMinX","itMaxX","maxYUp","maxYDown","modMaxX","maxX","extremeUp","y1","x1","extremeDown","scale","isOk","pointUp","pointDown","paramPoints","evt","rect","getBoundingClientRect","clientX","left","clientY","top","inverse","applyToPoint","sqrt","pow","handleCompute","updateResults","nextProps","_this3","photoLoader","extras_LoadPhotoBox","icon","mainFileIcon","actionBar","extras_ActionBar","imageContainer","onMouseDown","onMouseUp","onMouseMove","lib_default","url","bind","extras_Slider","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","location","hostname","initState","authReducer","arguments","undefined","action","message","projectReducer","canvasReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2ICe7BC,yGCcIC,cAZS,SAACC,GACrB,MAAO,CACHC,SAAUD,EAAME,SAASC,QAAQF,WAId,SAACG,GACxB,MAAO,CACHC,QAAS,kBAAMD,ECPZ,SAACA,EAAUE,EAAXC,IACcC,EADyBD,EAAjBC,eAGhBC,OAAOJ,UAAUK,KAAM,WAC5BN,EAAU,CAACO,KAAM,2BDOdZ,CAxBO,SAACa,GAEnB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,YAHR,IAIIQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAAmCJ,EAAMX,cEApEmB,EATQ,WAEnB,OACIP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCqBDnB,cARS,SAACC,GAErB,MAAO,CACHS,KAAMT,EAAME,SAASO,OAKdV,CAtBA,SAACa,GAAU,IAGhBS,EAFWT,EAATH,KAEWa,IAAMT,EAAAC,EAAAC,cAACQ,EAAD,MAAmBV,EAAAC,EAAAC,cAACS,EAAD,MAC5C,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,qBAAvB,aACCK,uBCgBFI,EA5BO,SAACb,GAEnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,UACKH,EAAMc,eAAiBd,EAAMc,cAAcC,IAAI,SAACC,GAE7C,OACIf,EAAAC,EAAAC,cAAA,MAAIc,IAAMD,EAAKE,IAAf,IACIjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaY,EAAKG,KAAlC,KACAlB,EAAAC,EAAAC,cAAA,YAAOa,EAAKI,SACZnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACViB,IAAOL,EAAKM,KAAKC,UAAUC,mBCArDC,EAfQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QAErB,OACI1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcuB,EAAQC,OACtC3B,EAAAC,EAAAC,cAAA,SAAIwB,EAAQP,SACZnB,EAAAC,EAAAC,cAAA,0BAAkBwB,EAAQE,gBAA1B,IAA4CF,EAAQG,gBACpD7B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaiB,IAAOM,EAAQI,UAAUR,UAAUS,eCoB9DC,EA3BM,SAAAP,GAAgB,IAAdQ,EAAcR,EAAdQ,SAEbC,EAAcD,EAChBA,EAASnB,IAAI,SAAAY,GACT,OACI1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YAAcqB,EAAQT,GAAID,IAAKU,EAAQT,IAAjD,IACIjB,EAAAC,EAAAC,cAACiC,EAAD,CAAgBT,QAASA,IAD7B,OAMR1B,EAAAC,EAAAC,cAAA,6CAQJ,OAEIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACX+B,sBC0CGE,6MAhEbjD,MAAQ,CACNkD,WAAY,KACZC,QAAQ,KAcVC,aAAe,WACbC,EAAKC,SAAS,CACZJ,WAAY,CACVK,MAAO,IAAOF,EAAKG,UAAUC,YAC7BC,OAAQ,IAAOL,EAAKG,UAAUC,YAAc,EAAI,SAKtDE,aAAe,WACbN,EAAKC,SAAS,CACZH,QAAQ,OAKZS,YAAc,WACZ,OACE/C,EAAAC,EAAAC,cAAA,SAAOwC,MAAOF,EAAKrD,MAAMkD,WAAWK,MAAOG,OAAQL,EAAKrD,MAAMkD,WAAWQ,OAAQG,UAAQ,GACvFhD,EAAAC,EAAAC,cAAA,UAAQ+C,IAAKC,IAAOpD,KAAK,mGA7B7BqD,KAAKZ,eACLa,OAAOC,iBAAiB,SAAUF,KAAKZ,6DAKvCa,OAAOE,oBAAoB,SAAUH,KAAKZ,+CA4BnC,IAAAgB,EAAAJ,KAEDK,EAAcL,KAAKhE,MAAMmD,OAI1B,KAHHtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BG,QAAW6C,KAAKL,cAAjE,8BAIN,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUsD,IAAK,SAACC,GAAD,OAASH,EAAKZ,UAAYe,IAClD1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,uBACAH,EAAAC,EAAAC,cAAA,UACCiD,KAAKhE,MAAMmD,QAAUa,KAAKhE,MAAMkD,YAAcc,KAAKJ,eAEnDS,YA1DMG,6BCOrBC,mLAME,OAAIT,KAAKpD,MAAMH,KAAKa,KAGpBoD,QAAQC,IAAIX,KAAKpD,OAEbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC6D,EAAD,CAAa9B,SAAYkB,KAAKpD,MAAMkC,YAF5C,IAIIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC8D,EAAD,CAAenD,cAAiBsC,KAAKpD,MAAMc,gBAC3Cb,EAAAC,EAAAC,cAAC+D,EAAD,OANR,OANwBjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAU7D,GAAK,mBAN/BsD,aAsCTQ,cACXjF,YAZoB,SAACC,GAErB,OADA0E,QAAQC,IAAI3E,GACL,CACH8C,SAAU9C,EAAMiF,UAAUC,QAAQpC,SAClCrC,KAAMT,EAAME,SAASO,KACrBiB,cAAe1B,EAAMiF,UAAUC,QAAQxD,iBAQ3CyD,2BAAiB,CACb,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJpDL,CAQPP,GCAOO,cACXjF,YAjBoB,SAACC,EAAOuF,GAC5B,IAAMzD,EAAKyD,EAASC,MAAMC,OAAO3D,GAC3BgB,EAAW9C,EAAMiF,UAAUS,KAAK5C,SAKtC,MAAO,CAIHP,QARYO,EAAWA,EAAShB,GAAM,KAStCrB,KAAMT,EAAME,SAASO,QAMzB0E,2BAAiB,CACb,CAACC,WAAY,cAHNJ,CAhDQ,SAACpE,GAEpB,IAAIA,EAAMH,KAAKa,IAAK,OAAOT,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAU7D,GAAG,YAExCwD,QAAQC,IAAI/D,GACZ,IAAM2B,EAAU3B,EAAM2B,QACtB,OAAGA,EAEK1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcuB,EAAQC,MAAtC,KACA3B,EAAAC,EAAAC,cAAA,SAAIwB,EAAQP,WAGpBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,WAAMwB,EAAQE,gBAAd,IAAgCF,EAAQG,gBACxC7B,EAAAC,EAAAC,cAAA,WAAMkB,IAAOM,EAAQI,UAAUR,UAAUS,YAF7C,MAUJ/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,0CC5BV4E,6MACF3F,MAAQ,CACJ4F,MAAO,GACPC,SAAU,MAGdC,aAAe,SAACC,GACZ1C,EAAKC,SAAL0C,OAAAC,EAAA,EAAAD,CAAA,GACKD,EAAEG,OAAOpE,GAAKiE,EAAEG,OAAOC,WAKhCC,aAAe,SAACL,GACZA,EAAEM,iBACFhD,EAAKzC,MAAM0F,OAAOjD,EAAKrD,gFAKvB,GAAGgE,KAAKpD,MAAMH,KAAKa,IAAK,OAAOT,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAU7D,GAAG,MADvC,IAEGqF,EAAcvC,KAAKpD,MAAnB2F,UACR,OACA1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMyF,SAAUxC,KAAKoC,aAAcpF,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,IACIH,EAAAC,EAAAC,cAAA,SAAO0F,QAAQ,SAAf,SACA5F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQmB,GAAG,QAAQ4E,SAAU1C,KAAK8B,gBAElDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,IACIH,EAAAC,EAAAC,cAAA,SAAO0F,QAAQ,YAAf,YACA5F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWmB,GAAG,WAAW4E,SAAU1C,KAAK8B,gBAExDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACTuF,EAAY1F,EAAAC,EAAAC,cAAA,SAAIwF,GAAiB,gBArCtC/B,aAoENzE,cAbS,SAACC,GACrB,MAAO,CACHuG,UAAWvG,EAAMS,KAAK8F,UACtB9F,KAAMT,EAAME,SAASO,OAIF,SAACL,GACxB,MAAO,CACHkG,OAAQ,SAACK,GAAD,OAAWvG,GTrEJwG,ESqEoBD,ETpEhC,SAACvG,EAAUE,EAAXgC,IACc9B,EADyB8B,EAAjB9B,eAGhBC,OAAOoG,2BACZD,EAAYhB,MACZgB,EAAYf,UACdnF,KAAK,WACHN,EAAW,CAACO,KAAM,oBACnBmG,MAAM,SAACC,GACN3G,EAAU,CAACO,KAAM,cAAeoG,aAVtB,IAACH,KSyER7G,CAA6C4F,GCpEtDqB,6MACFhH,MAAQ,CACJ4F,MAAO,GACPC,SAAU,GACVoB,UAAW,GACXC,SAAU,MAGdpB,aAAe,SAACC,GACZ1C,EAAKC,SAAL0C,OAAAC,EAAA,EAAAD,CAAA,GACKD,EAAEG,OAAOpE,GAAKiE,EAAEG,OAAOC,WAKhCC,aAAe,SAACL,GACZA,EAAEM,iBACFhD,EAAKzC,MAAMuG,OAAO9D,EAAKrD,gFAKvB,OAAGgE,KAAKpD,MAAMH,KAAKa,IAAYT,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAU7D,GAAG,MAE5CL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMyF,SAAUxC,KAAKoC,aAAcpF,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,IACIH,EAAAC,EAAAC,cAAA,SAAO0F,QAAQ,SAAf,SACA5F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQmB,GAAG,QAAQ4E,SAAU1C,KAAK8B,gBAElDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,IACIH,EAAAC,EAAAC,cAAA,SAAO0F,QAAQ,YAAf,YACA5F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWmB,GAAG,WAAW4E,SAAU1C,KAAK8B,gBAExDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,IACIH,EAAAC,EAAAC,cAAA,SAAO0F,QAAQ,aAAf,cACA5F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOmB,GAAG,YAAY4E,SAAU1C,KAAK8B,gBAErDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,IACIH,EAAAC,EAAAC,cAAA,SAAO0F,QAAQ,YAAf,aACA5F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOmB,GAAG,WAAW4E,SAAU1C,KAAK8B,gBAEpDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACTgD,KAAKpD,MAAM2F,UAAY1F,EAAAC,EAAAC,cAAA,SAAIiD,KAAKpD,MAAM2F,WAAiB,gBA9C5D/B,aAoENzE,cAbS,SAACC,GACrB,MAAO,CACHS,KAAMT,EAAME,SAASO,KACrB8F,UAAWvG,EAAMS,KAAK8F,YAIH,SAACnG,GACxB,MAAO,CACH+G,OAAQ,SAACC,GAAD,OAAahH,EV1CP,SAACgH,GACnB,OAAO,SAAChH,EAAUE,EAAX+G,GAAqD,IAA/B7G,EAA+B6G,EAA/B7G,YAAa8G,EAAkBD,EAAlBC,aAChCpH,EAAWM,IACXyE,EAAYqC,IAElBpH,EAASO,OAAO8G,+BACZH,EAAQxB,MACRwB,EAAQvB,UACVnF,KAAK,SAAC8G,GAEJ,OAAOvC,EAAUG,WAAW,SAASqC,IAAID,EAAKzF,KAAKT,KAAKoG,IAAI,CACxDT,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBjH,SAAUmH,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAEvDxG,KAAK,WACJN,EAAS,CAACO,KAAM,qBACjBmG,MAAM,SAACC,GACN3G,EAAS,CAACO,KAAM,eAAgBoG,WUwBNI,CAAOC,OAI9BrH,CAA6CiH,WCpEtDW,6MACF3H,MAAQ,CACJwC,MAAO,GACPR,QAAS,MAGb8D,aAAe,SAACC,GACZ1C,EAAKC,SAAL0C,OAAAC,EAAA,EAAAD,CAAA,GACKD,EAAEG,OAAOpE,GAAKiE,EAAEG,OAAOC,WAKhCC,aAAe,SAACL,GACZA,EAAEM,iBAEFhD,EAAKzC,MAAMgH,cAAcvE,EAAKrD,OAC9BqD,EAAKzC,MAAMiH,QAAQC,KAAK,8EAKxB,OAAI9D,KAAKpD,MAAMH,KAAKa,IAEpBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMyF,SAAUxC,KAAKoC,aAAcpF,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,IACIH,EAAAC,EAAAC,cAAA,SAAO0F,QAAQ,SAAf,SACA5F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOmB,GAAG,QAAQ4E,SAAU1C,KAAK8B,gBAEjDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,IACIH,EAAAC,EAAAC,cAAA,SAAO0F,QAAQ,WAAf,mBACA5F,EAAAC,EAAAC,cAAA,YAAUe,GAAG,UAAUd,UAAU,uBAAuB0F,SAAU1C,KAAK8B,gBAE3EjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,aAdoBH,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAU7D,GAAG,mBAtBzBsD,aA2DbzE,cAfS,SAACC,EAAOuF,GAC5B,MAAO,CACH9E,KAAMT,EAAME,SAASO,OAKF,SAACL,GACxB,MAAO,CACHwH,cAAe,SAACrF,GAAD,OAAanC,EC1DP,SAACmC,GAO1B,OAAO,SAACnC,EAAUE,EAAXgC,GAAuDA,EAAhC9B,YAAgC,IAEpDyE,GAAYqC,EAFwChF,EAAnBgF,gBAIjCnH,EAAUG,IAAWJ,SAASC,QAC9B4H,EAAWzH,IAAWJ,SAASO,KAAKa,IAC1C2D,EAAUG,WAAW,YAAY4C,IAAjChC,OAAAiC,EAAA,EAAAjC,CAAA,GACOzD,EADP,CAEIE,gBAAiBtC,EAAQ8G,UACzBvE,eAAgBvC,EAAQ+G,SACxBa,SAAUA,EACVpF,UAAW,IAAIuF,QAChBxH,KAAK,WACJN,EAAS,CAACO,KAAM,iBAAkB4B,QAASA,MAC5CuE,MAAM,SAACC,GACN3G,EAAS,CAACO,KAAO,uBAAwBoG,WDoCRa,CAAcrF,OAM5CxC,CAA6C4H,0EE1CtDQ,6MAENC,WAAa,SAACrC,EAAGsC,GACbhF,EAAKzC,MAAM0H,WAAWD,4EAItB,IAAMA,EAAOrE,KAAKpD,MAAMyH,KAChBE,EAAYvE,KAAKpD,MAAjB2H,QACR,OACE1H,EAAAC,EAAAC,cAAA,OAAKC,UAAWuH,EAAQC,iBAClB3H,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAmBqF,MAAOkC,EAAMK,WAAS,EAAChC,SAAU1C,KAAKoE,YACrDvH,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CAAcqF,MAAM,UAChBtF,EAAAC,EAAAC,cAAA,KAAG6H,MAAM,kBAAT,cAEJ/H,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CAAcqF,MAAM,YAChBtF,EAAAC,EAAAC,cAAA,KAAG6H,MAAM,kBAAT,uBAhBIpE,aAwCTzE,cAfS,SAACC,EAAOuF,GAC5B,MAAO,CACH8C,KAAMrI,EAAM6I,OAAOR,OAIA,SAACjI,GACxB,MAAO,CACHkI,WAAY,SAACD,GAAD,OAAUjI,ECvDJ,SAACiI,GACvB,MAAO,CACH1H,KAAM,cACN0H,KAAMA,GDoDyBC,CAAWD,OAOnCtI,CAA6C+I,qBAtD7C,SAAAC,GAAK,MAAK,CACrBP,gBAAiB,CACf9E,OAAQ,GACRsF,QAAO,GAAAC,OAAKF,EAAMG,QAAQC,KAAnB,OAAAF,OAAkD,EAArBF,EAAMG,QAAQC,KAA3C,MACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,aAChBC,OAAM,GAAAN,OAAKF,EAAMG,QAAQC,KAAnB,WA+CgDL,CAAmBX,sBEhCzEqB,EAAmB,CAAC,YAAa,aAAc,YAAa,aAC5DC,EAA0B,SAACC,GAC7B,OAA6C,IAAzCF,EAAiBG,QAAQD,EAAK/I,OA4BvBiJ,GArBM,SAAChJ,GAClB,OACIC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAC8I,EAAA/I,EAAD,CACAgJ,OAAO,UACHC,OAAO,UACPC,YAAapJ,EAAMoJ,YACnBC,OAAQrJ,EAAMqJ,OACdC,SAAUT,IAKd5I,EAAAC,EAAAC,cAAA,eCZIoJ,GArCE,SAAA7H,GAA2B,IAAzB8H,EAAyB9H,EAAzB8H,OAAQC,EAAiB/H,EAAjB+H,YAOlBC,EAAYF,EACdA,EAAOzI,IAAI,SAAA4I,GACP,OACI1J,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAQa,IAAO0I,EAAMzI,IAClCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcuJ,EAAMC,MACpC3J,EAAAC,EAAAC,cAAA,gBAAQwJ,EAAME,GACd5J,EAAAC,EAAAC,cAAA,gBAAQwJ,EAAMG,GACd7J,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCG,QAAS,kBAAMkJ,EAAYE,EAAMzI,MAAxF,eAOpBjB,EAAAC,EAAAC,cAAA,mCAKJ,OACIF,EAAAC,EAAAC,cAAA,WACKuJ,4CCvBPK,GAA2BC,wBAAaC,sBAAWC,OAEnDC,GACK,CACL/B,QAAS,GACTgC,UAAW,IACXC,MAAO,QAJPF,GAMM,CACNG,gBAAiB,WAPjBH,GASM,CACNG,gBAAiB,WAVjBH,GAYM,CACNG,gBAAiB,WAIjBC,8MAEFnL,MAAQ,CACJoL,WAAY,KAIhBC,uBAAyB,SAAAD,GACrB/H,EAAKC,SAAS,CACV8H,WAAYA,OAIpBE,kBAAoB,SAACC,GACjB,OAAQA,GACJ,KAAK,EACDlI,EAAKzC,MAAM4K,eAAe,YAC1B,MACJ,KAAK,EACDnI,EAAKzC,MAAM4K,eAAe,UAC1B,MACJ,KAAK,EACDnI,EAAKzC,MAAM4K,eAAe,cAC1B,MACJ,KAAK,EACDnI,EAAKzC,MAAM4K,eAAe,UAC1B,MACJ,QACInI,EAAKzC,MAAM4K,eAAe,gBAItCC,gBAAkB,WACd,IAAMC,EAAerI,EAAKrD,MAAMoL,WAC1BG,EAA4B,IAAjBG,EAAsBA,EAAa,EAAMA,EAE1DrI,EAAKiI,kBAAkBC,GAEvBlI,EAAKC,SAAS,CACV8H,WAAYG,OAMpBI,gBAAkB,WACd,IAAMD,EAAerI,EAAKrD,MAAMoL,WAC1BG,EAA4B,IAAjBG,EAAsBA,EAAe,EAAM,EAE5DrI,EAAKiI,kBAAkBC,GAGvBlI,EAAKC,SAAS,CACV8H,WAAYG,IAGI,IAAjBG,GACCrI,EAAKC,SAAS,CACVsI,UAAU,OAOtBC,kBAAoB,SAAC/J,GACjB4C,QAAQC,IAAItB,EAAKzC,OACjB8D,QAAQC,IAAI,QACZtB,EAAKzC,MAAMyJ,YAAYvI,MAG3BgK,UAAY,WACR,OACIjL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCG,QAASkC,EAAKsI,iBAArE,iBAIRI,aAAe,WACX1I,EAAKzC,MAAMoL,cAAc3I,EAAKzC,MAAMqL,SACnCvL,KAAK,WACF2C,EAAKC,SAAS,CACVsI,UAAU,+EAKb,IAAAxH,EAAAJ,KAECkI,EAAgBlI,KAAKhE,MAAM4L,SAG7B/K,EAAAC,EAAAC,cAAA,2BAFAF,EAAAC,EAAAC,cAAA,qBAuHR,OACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4J,GAAD,CACgBwB,MAAOnI,KAAKhE,MAAMoL,WAClBgB,cAAepI,KAAKqH,uBACpBgB,cAlEE,SAAC5G,GAAW,IAE1B6G,EADIH,EAAe1G,EAAf0G,MAAOtK,EAAQ4D,EAAR5D,IAETG,EAxDU,SAACyD,GAEjB,OADkBA,EAAV0G,OAEJ,QACI,OACItL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAACwL,GAAD,CAAWnC,OAAQhG,EAAKxD,MAAM4L,eAAgBnC,YAAcjG,EAAKyH,qBAI7E,KAAK,EACD,OACIhL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAACwL,GAAD,CAAWnC,OAAQhG,EAAKxD,MAAM6L,aAAcpC,YAAcjG,EAAKyH,qBAI3E,KAAK,EACD,OACIhL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCG,QAAS,kBAAMiD,EAAKxD,MAAM8L,mBAAjF,2BAEJ7L,EAAAC,EAAAC,cAACwL,GAAD,CAAWnC,OAAQhG,EAAKxD,MAAM+L,cAAetC,YAAcjG,EAAKyH,qBAI5E,KAAK,EACD,OACIhL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,WACAH,EAAAC,EAAAC,cAAA,uBAAeqD,EAAKxD,MAAMqL,QAAQnK,IAClCjB,EAAAC,EAAAC,cAAA,mBAAWqD,EAAKxD,MAAMqL,QAAQzB,MAC9B3J,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCG,QAASiD,EAAK2H,cAAeG,OAiB5FU,CAAYnH,GAE5B,OAAQoH,eAAIV,EAAO,IACjB,KAAK,EACHG,EAAQvB,GACR,MAEF,KAAK,EACHuB,EAAQvB,GACR,MAEF,KAAK,EACHuB,EAAQvB,GAOZ,IAgBM+B,EAhBuB,WAEzB,OAAQ1I,EAAKpE,MAAMoL,YACf,KAAK,EACD,OAA4C,IAArChH,EAAKxD,MAAM4L,eAAeO,OACrC,KAAK,EACD,OAA0C,IAAnC3I,EAAKxD,MAAM6L,aAAaM,OACnC,KAAK,EACD,OAA2C,IAApC3I,EAAKxD,MAAM+L,cAAcI,OACpC,KAAK,EACD,OAAO,EACX,QACI,OAAO,GAIAC,GACfnM,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCG,QAASiD,EAAKuH,iBAArE,QAEA,KAGEsB,EAAa7I,EAAKpE,MAAMoL,WAAa,EACvCvK,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oCAAoCG,QAASiD,EAAKqH,iBAApE,QAEA,KAGJ,OACI5K,EAAAC,EAAAC,cAAA,OAAKuL,MAAOtG,OAAOkH,OAAO,GAAInC,GAAoBuB,GAAQzK,IAAKA,GAC1DoL,EAC0B,IAA1B7I,EAAKpE,MAAMoL,YAAoBhH,EAAKpE,MAAM4L,UAAYxH,EAAK0H,YAC3DgB,EACDjM,EAAAC,EAAAC,cAAA,WACCiB,cA3MAwC,aA4ONzE,eAhBS,SAACC,GACrB,MAAO,CACHwM,eAAgBxM,EAAM6I,OAAOuB,OAAO+C,MAAM,EAAE,GAC5CV,aAAczM,EAAM6I,OAAOuB,OAAO+C,MAAM,EAAE,GAC1CR,cAAe3M,EAAM6I,OAAOuB,OAAO+C,MAAM,EAAE,GAC3ClB,QAASjM,EAAM6I,OAAOoD,UAIH,SAAC7L,GACxB,MAAO,CACHoL,eAAgB,SAAC4B,GAAD,OAAchN,EHhPR,SAACgN,GAC3B,OAAO,SAAAhN,GACL,OAAO,IAAIiN,QAAQ,SAACC,EAASC,GAC3BnN,EAAS,CACLO,KAAM,mBACNyM,SAAUA,IAGdE,OGwOuC9B,CAAe4B,KACtDpB,cAAe,SAACC,GAAD,OAAa7L,EHtNP,SAAC6L,GAC1B,OAAO,SAAA7L,GACL,OAAO,IAAIiN,QAAQ,SAACC,EAASC,GAC3BnN,EAAS,CACLO,KAAM,iBACNsL,QAASA,IAGbqB,OG8MqCtB,CAAcC,OAI5ClM,CAA6CoL,InB5PxDqC,WAASC,EAAQ,KAA4BD,QAK3CE,8MAEF1N,MAAQ,CACJ2N,IAAM,KACNC,YAAa,IACbC,aAAc,IACdC,MAAQ,KACR1D,OAAQ,GACR2D,MAAO,EACPC,OAAQ,EACR3F,KAAM,SACN4F,aAAc,CACVxD,EAAG,EACHC,EAAG,GAEPwD,UAAW,CACPzD,EAAG,EACHC,EAAG,GAEPyD,cAAe,KACfC,kBAAmB,KACnBC,cAAc,EACdC,aAAa,EACbC,eAAgB,CACZ9D,EAAG,EACHC,EAAG,GAEP8D,aAAa,EACbC,cAAc,KAGlBC,iBAAmB,eAInBC,iBAAmB,WACftL,EAAKC,SAAS,CAAEmL,cAAc,OAGlCG,mBAAqB,SAACC,EAAOnF,EAAMoF,GAG/B,IAAIC,EAAQ,IAAIC,MAChBD,EAAMjL,IAAM+K,EAAM3I,OAAO+I,OAGThL,OAAOiL,IAAIC,gBAAgBzF,GAC3CqF,EAAMK,OAAS,WACX/L,EAAKzC,MAAMyO,aAAa,IAGxBhM,EAAKC,SAAS,CAAEgM,SAAS,EAAOd,aAAa,EAAMT,MAAO,GAAK,WAE3D,IAAMlF,EAASxF,EAAKkM,KAAK1G,OACnB2G,EAAYnM,EAAKkM,KAAKC,UACtB7B,EAAM9E,EAAO4G,WAAW,MAG9BV,EAAMW,aAAa,cAAe,aAElC,IAAMC,EAAoBZ,EAAMxL,MAC1BqM,EAAqBb,EAAMrL,OAG7BmM,EAASd,EAAMxL,MAAQwL,EAAMrL,OACjCgB,QAAQC,IAAIoK,EAAMrL,QAClBqL,EAAMrL,OAASL,EAAKrD,MAAM6N,aAAe,IACzCkB,EAAMxL,MAAQwL,EAAMrL,OAASmM,EAC7BnL,QAAQC,IAAIoK,EAAMrL,QAKlB,IAAIoM,GAAWjH,EAAOtF,MAAQwL,EAAMxL,OAAQ,EACxCwM,GAAWlH,EAAOnF,OAASqL,EAAMrL,QAAS,EAE9CL,EAAKC,SAAS,CACVuF,OAASA,EACT8E,IAAMA,EACNG,MAAQiB,EACRiB,SAAUtG,EAAKc,KACfgF,UAAWA,EACXhB,aAAa,EACbyB,YAAaN,EAAmBZ,EAAMxL,MACtC2M,YAAaN,EAAoBb,EAAMrL,OACvCyM,kBAAmBL,EACnBM,kBAAmBL,GACpB,WACCpC,EAAI0C,UAAY,OAChB1C,EAAI2C,SAAS,EAAE,EAAEzH,EAAOtF,MAAOsF,EAAOnF,QACtCiK,EAAI4C,UAAUxB,EAAOe,EAASC,EAAShB,EAAMxL,MAAOwL,EAAMrL,QAE1DiK,EAAI6C,KAAO,eACX1Q,EAAI,IAAI0N,GAAOnK,EAAKrD,MAAM2N,KAG1BjJ,QAAQC,IAAItB,EAAKzC,OACdyC,EAAKrD,MAAMyO,cACVpL,EAAKoN,yBAwBzBC,0BAA4B,SAAC3C,EAAO4C,GAEhC,IAAMhD,EAAMtK,EAAKrD,MAAM2N,IAEvBA,EAAIiD,UAAU,EAAG,EAAGvN,EAAKrD,MAAM6I,OAAOtF,MAAOF,EAAKrD,MAAM6I,OAAOnF,QAC/DiK,EAAI0C,UAAY,OAChB1C,EAAI2C,SAAS,EAAE,EAAEjN,EAAKrD,MAAM6I,OAAOtF,MAAOF,EAAKrD,MAAM6I,OAAOnF,QAE5DiK,EAAIkD,OACJlD,EAAImD,UAAUzN,EAAKrD,MAAM6I,OAAOtF,MAAM,EAAIF,EAAKrD,MAAMiO,aAAaxD,EAAGpH,EAAKrD,MAAM6I,OAAOnF,OAAO,EAAIL,EAAKrD,MAAMiO,aAAavD,GAEzHiG,EAAkDhD,EAAIoD,OAAO,GAApDpD,EAAIoD,OAAO1N,EAAKrD,MAAM+N,MAAQA,GAExCJ,EAAImD,YAAYzN,EAAKrD,MAAM6I,OAAOtF,MAAM,EAAIF,EAAKrD,MAAMiO,aAAaxD,KAAMpH,EAAKrD,MAAM6I,OAAOnF,OAAO,EAAIL,EAAKrD,MAAMiO,aAAavD,IAG/HiD,EAAI4C,UAAUlN,EAAKrD,MAAM8N,MAAOzK,EAAKrD,MAAMmQ,kBAAoB9M,EAAKrD,MAAMiO,aAAaxD,EAAKpH,EAAKrD,MAAMoQ,kBAAoB/M,EAAKrD,MAAMiO,aAAavD,EAAGrH,EAAKrD,MAAM8N,MAAMvK,MAAOF,EAAKrD,MAAM8N,MAAMpK,QAC/LiK,EAAIqD,aAIRC,aAAe,SAAC1G,GACZ,IAAMoD,EAAMtK,EAAKrD,MAAM2N,IAEvBA,EAAI0C,UAAY,UAChB1C,EAAIuD,YACJvD,EAAIwD,IAAI5G,EAAME,EAAGF,EAAMG,EAAG,EAAG,EAAG,EAAI0G,KAAKC,IACzC1D,EAAI2D,OACJ3D,EAAI4D,SAEJ5D,EAAIkD,OACJlD,EAAImD,UAAUvG,EAAME,EAAGF,EAAMG,GAC7BiD,EAAI0C,UAAY,MAChB1C,EAAI6C,KAAO,QAAWY,KAAKI,IAAI,EAAE,IAAa,WAC9C7D,EAAI8D,SAASlH,EAAMC,KAAM,GAAK,GAC9BmD,EAAIqD,aAGRU,wBAA0B,SAACC,EAAQC,GAC/B,IAEIC,EACAC,EACAC,EACAC,EALErE,EAAMtK,EAAKrD,MAAM2N,IAQvB,GAAa,MAAViE,EAAe,CACd,IAAIK,EAASN,EAAOlH,EAAImH,EAAOnH,EAG/B,GAFA/F,QAAQC,IAAIsN,GAEE,IAAXA,EACCF,EAAYJ,EAAOlH,EACnBuH,EAAUJ,EAAOnH,EACjBoH,EAAY,EACZC,EAAUzO,EAAKrD,MAAM6I,OAAOnF,WAC3B,CAED,IAAI5C,GAAK6Q,EAAOjH,EAAIkH,EAAOlH,IAAIiH,EAAOlH,EAAImH,EAAOnH,GAC7CyH,EAAIP,EAAOjH,EAAI5J,EAAE6Q,EAAOlH,EACxB0H,EAAO9O,EAAKrD,MAAM6I,OAAOtF,MAE7BsO,EAAYK,EACZJ,EAAUhR,EAAEqR,EAAOD,EACnBH,EAAY,EACZC,EAAUG,QAGVJ,EAAY,EACZC,EAAU3O,EAAKrD,MAAM6I,OAAOtF,MAC5BsO,EAAYF,EAAOjH,EACnBoH,EAAUH,EAAOjH,EAIzBiD,EAAIuD,YACJvD,EAAIyE,OAAOL,EAAWF,GACtBlE,EAAI0E,OAAOL,EAASF,GACpBnE,EAAI4D,YAKRe,gBAAkB,SAACvM,GAEf,IAAIwM,EAAQlP,EAAKmP,YAAYnP,EAAKrD,MAAM6I,OAAQ9C,GAIhD,GAHAwM,EAAQlP,EAAKoP,QAAQF,EAAM9H,EAAG8H,EAAM7H,GAGb,aAApBrH,EAAKzC,MAAMyH,KAAoB,CAE9B,IAAImJ,GAAM,EACNkB,GAAM,EACNtI,EAAS,GAEb,OAAO/G,EAAKzC,MAAMwM,UACd,IAAK,WAEoBoE,GADrBpH,EAAS/G,EAAKzC,MAAM4L,gBACbO,OAAS,EAChB,MACJ,IAAK,SAEoByE,GADrBpH,EAAS/G,EAAKzC,MAAM6L,cACbM,OAAS,EAChB,MACJ,IAAK,aAEoByE,GADrBpH,EAAS/G,EAAKzC,MAAM+L,eACbI,OAAS,EAChB,MACJ,IAAK,UACD2F,GAAM,EACNlB,GAAM,EACN,MACJ,QACIkB,GAAM,EACNlB,GAAM,EAId,IAAImB,GAAc,EAgBlB,GAfID,GACAtI,EAAOwI,QAAQ,SAAArI,GAEE,MAATA,GACGlH,EAAKwP,UAAUN,EAAOhI,KACrBlH,EAAKC,SAAS,CAAE6K,cAAe5D,EAAMzI,GAAIsM,kBAAmB7D,EAAMC,KAAOsI,cAAc,IAEnFH,GAAc,EACdpI,EAAMgH,OAAS,aAO/BoB,EAyBAtP,EAAK0P,aAAahN,QAxBlB,IAAIyL,EAAI,CACJ,IAAIjH,EAAQ,CAACzI,GAAIuB,EAAKrD,MAAMgO,OAAS,EAAGvD,EAAG8H,EAAM9H,EAAGC,EAAG6H,EAAM7H,EAAGF,KA1C7D,IA4CCwI,EAAS,GAAA/J,OAAAjD,OAAAiN,EAAA,EAAAjN,CAAO3C,EAAKzC,MAAMwJ,QAAlB,CAA0BG,IAEvC7F,QAAQC,IAAI4F,GACZyI,EAAY3P,EAAK6P,aAAaF,GAC9BtO,QAAQC,IAAIqO,EAAU,IACtB3P,EAAKqN,0BAA0B,GAC/BsC,EAAUJ,QAAQ,SAAArI,GACD,MAATA,GACAlH,EAAK4N,aAAa1G,KAI1BlH,EAAKC,SAAS,CAEV0K,OAAQ3K,EAAKrD,MAAMgO,OAAS,GAC7B,WACC3K,EAAK8P,UAAUH,GACf3P,EAAKzC,MAAMyO,aAAa2D,UAQX,WAApB3P,EAAKzC,MAAMyH,MAChBhF,EAAK0P,aAAahN,MAK1BqN,sBAAwB,WACpB/P,EAAKqN,0BAA0B,GAE/BrN,EAAKzC,MAAMwJ,OAAOwI,QAAQ,SAAArI,GACT,MAATA,GACAlH,EAAK4N,aAAa1G,QAK9BF,YAAc,SAACvI,GAEXuB,EAAKqN,0BAA0B,GAE/B,IAAIpG,EAAYjH,EAAKzC,MAAMwJ,OAAOiJ,OAAO,SAAC9I,GACtC,OAAOA,EAAMzI,KAAOA,KAGxBwI,EAAYjH,EAAK6P,aAAa5I,IAEpBsI,QAAQ,SAAArI,GACD,MAATA,GACAlH,EAAK4N,aAAa1G,KAS1BlH,EAAKzC,MAAMyO,aAAa/E,MAM5BgJ,aAAe,WACX,IAAMC,EAAgBlQ,EAAKzC,MAAM4L,eAEjC,GAA4B,IAAzB+G,EAAcxG,OAAa,CAC1B,IAAIyG,EAAU,KACVC,EAAY,KAEbF,EAAc,GAAG7I,GAAK6I,EAAc,GAAG7I,GACtC8I,EAAUD,EAAc,GACxBE,EAAYF,EAAc,KAE1BC,EAAUD,EAAc,GACxBE,EAAYF,EAAc,IAG9B,IAAIxF,EAAQqD,KAAKsC,KAAKtC,KAAKuC,IAAIH,EAAQ/I,EAAIgJ,EAAUhJ,GAAK2G,KAAKuC,IAAIH,EAAQ9I,EAAI+I,EAAU/I,IACtF8I,EAAQ/I,EAAIgJ,EAAUhJ,IACrBsD,IAAU,GAEdrJ,QAAQC,IAAIoJ,GAIZ1K,EAAKqN,0BAA0B3C,GAI/B,IAAI+B,EAAUzM,EAAKrD,MAAMiO,aAAaxD,EAClCsF,EAAU1M,EAAKrD,MAAMiO,aAAavD,EAGtC5K,EAAEgR,UAAUzN,EAAKrD,MAAM6I,OAAOtF,MAAM,EAAIuM,EAASzM,EAAKrD,MAAM6I,OAAOnF,OAAO,EAAIqM,GAC9EjQ,EAAEiR,OAAOhD,GACTjO,EAAEgR,YAAYzN,EAAKrD,MAAM6I,OAAOtF,MAAM,EAAIuM,KAAWzM,EAAKrD,MAAM6I,OAAOnF,OAAO,EAAIqM,IAGlF,IAAI6D,EAAmB9T,EAAE+T,aAAaxQ,EAAKzC,MAAMwJ,QACjD1F,QAAQC,IAAIiP,GAEZ9T,EAAE6Q,QAOF,IADA,IAAIqC,EAAY,GACRc,EAAE,EAAGA,EAAEF,EAAiB7G,OAAQ+G,IAAI,CACxC,IAAIC,EAAW,CAACjS,GAAIuB,EAAKzC,MAAMwJ,OAAO0J,GAAGhS,GAAI2I,EAAGmJ,EAAiBE,GAAGrJ,EAAGC,EAAGkJ,EAAiBE,GAAGpJ,EAAGF,KAAMnH,EAAKzC,MAAMwJ,OAAO0J,GAAGtJ,MAC5HwI,EAAS,CAAIe,GAAJ9K,OAAAjD,OAAAiN,EAAA,EAAAjN,CAAiBgN,KAI9BA,EAAY3P,EAAK6P,aAAaF,IAEpBJ,QAAQ,SAAArI,GACD,MAATA,GACAlH,EAAK4N,aAAa1G,KAM1BlH,EAAKC,SAAS,CAEVyK,MAAOA,EAAQ1K,EAAKrD,MAAM+N,OAC5B,WACE1K,EAAKzC,MAAMyO,aAAa2D,GACxB3P,EAAKoN,uBAOjBuD,oBAAsB,WAElB3Q,EAAKC,SAAS,CACV2K,aAAc,CACVxD,EAAG,EACHC,EAAG,IAGR,WACCrH,EAAKqN,0BAA0B,MAAM,GAErC,IAAIZ,EAAUzM,EAAKrD,MAAMuO,eAAe9D,EACpCsF,EAAU1M,EAAKrD,MAAMuO,eAAe7D,EAIxC5K,EAAEgR,UAAUzN,EAAKrD,MAAM6I,OAAOtF,MAAM,EAAIuM,EAASzM,EAAKrD,MAAM6I,OAAOnF,OAAO,EAAIqM,GAC9EjQ,EAAEiR,QAAQ1N,EAAKrD,MAAM+N,OACrBjO,EAAEgR,YAAYzN,EAAKrD,MAAM6I,OAAOtF,MAAM,EAAIuM,KAAWzM,EAAKrD,MAAM6I,OAAOnF,OAAO,EAAIqM,IAGlF,IAAI6D,EAAmB9T,EAAE+T,aAAaxQ,EAAKzC,MAAMwJ,QACjD1F,QAAQC,IAAIiP,GAEZ9T,EAAE6Q,QAMF,IADA,IAAIqC,EAAY,GACRc,EAAE,EAAGA,EAAEF,EAAiB7G,OAAQ+G,IAAI,CACxC,IAAIC,EAAW,CAACjS,GAAIuB,EAAKzC,MAAMwJ,OAAO0J,GAAGhS,GAAI2I,EAAGmJ,EAAiBE,GAAGrJ,EAAIqF,EAASpF,EAAGkJ,EAAiBE,GAAGpJ,EAAIqF,EAASvF,KAAMnH,EAAKzC,MAAMwJ,OAAO0J,GAAGtJ,MAChJwI,EAAS,GAAA/J,OAAAjD,OAAAiN,EAAA,EAAAjN,CAAOgN,GAAP,CAAkBe,KAI/Bf,EAAY3P,EAAK6P,aAAaF,IAEpBJ,QAAQ,SAAArI,GACD,MAATA,GACAlH,EAAK4N,aAAa1G,KAM1BlH,EAAKC,SAAS,CAEVyK,MAAO,EACPQ,eAAgB,CACZ9D,EAAG,EACHC,EAAG,IAER,WACCrH,EAAKzC,MAAMyO,aAAa2D,GAExB3P,EAAKoN,wBAOjBsC,aAAe,SAAChN,GACZ,IAAIwM,EAAQlP,EAAKmP,YAAYnP,EAAKrD,MAAM6I,OAAQ9C,GAC5CmI,EAAY,CAAEzD,EAAG8H,EAAM9H,EAAIpH,EAAKrD,MAAMiO,aAAaxD,EAAGC,EAAG6H,EAAM7H,EAAIrH,EAAKrD,MAAMiO,aAAavD,GAC/FrH,EAAKC,SAAS,CAAE4K,UAAWA,EAAW+F,uBAAuB,OAIjEC,gBAAkB,SAACrF,GAGf,GAAIxL,EAAKrD,MAAMiU,sBAAuB,CAClC,IAAI1B,EAAQlP,EAAKmP,YAAYnP,EAAKrD,MAAM6I,OAAQgG,GAEhD,GAAwB,aAApBxL,EAAKzC,MAAMyH,MAAuBhF,EAAKrD,MAAM8S,aAAc,CAE3DzP,EAAKqN,0BAA0B,GAC/B6B,EAAQlP,EAAKoP,QAAQF,EAAM9H,EAAG8H,EAAM7H,GAGpC,IAAIJ,EAAYjH,EAAKzC,MAAMwJ,OAAOiJ,OAAO,SAAC9I,GACtC,OAAOA,EAAMzI,KAAOuB,EAAKrD,MAAMmO,gBAK/B5D,EAAQ,CAACzI,GAAIuB,EAAKrD,MAAMmO,cAAe1D,EAAG8H,EAAM9H,EAAGC,EAAG6H,EAAM7H,EAAGF,KAAMnH,EAAKrD,MAAMoO,mBACpF9D,EAAS,GAAArB,OAAAjD,OAAAiN,EAAA,EAAAjN,CAAOsE,GAAP,CAAkBC,KAE3BD,EAAYjH,EAAK6P,aAAa5I,IAEpBsI,QAAQ,SAAArI,GACD,MAATA,GACAlH,EAAK4N,aAAa1G,KAI1BlH,EAAKC,SAAS,GAEX,WACCD,EAAKzC,MAAMyO,aAAa/E,UAEzB,GAAwB,WAApBjH,EAAKzC,MAAMyH,KAAmB,CACrC,IAEI8L,EAAS,CAAE1J,EAFN8H,EAAM9H,EAAIpH,EAAKrD,MAAMkO,UAAUzD,EAElBC,EADb6H,EAAM7H,EAAIrH,EAAKrD,MAAMkO,UAAUxD,GAExCrH,EAAKC,SAAS,CAAE2K,aAAckG,EACd7F,aAAa,GACzB,WACIjL,EAAKqN,0BAA0B,GAQ/B,IAJA,IAAIZ,EAAUzM,EAAKrD,MAAMiO,aAAaxD,EAAIpH,EAAKrD,MAAMuO,eAAe9D,EAChEsF,EAAU1M,EAAKrD,MAAMiO,aAAavD,EAAIrH,EAAKrD,MAAMuO,eAAe7D,EAChEsI,EAAY,GAERc,EAAE,EAAGA,EAAEzQ,EAAKzC,MAAMwJ,OAAO2C,OAAQ+G,IAAI,CACzC,IAAIC,EAAW,CAACjS,GAAIuB,EAAKzC,MAAMwJ,OAAO0J,GAAGhS,GAAI2I,EAAGpH,EAAKzC,MAAMwJ,OAAO0J,GAAGrJ,EAAIqF,EAASpF,EAAGrH,EAAKzC,MAAMwJ,OAAO0J,GAAGpJ,EAAIqF,EAASvF,KAAMnH,EAAKzC,MAAMwJ,OAAO0J,GAAGtJ,MAClJwI,EAAS,GAAA/J,OAAAjD,OAAAiN,EAAA,EAAAjN,CAAOgN,GAAP,CAAkBe,IAI/Bf,EAAUJ,QAAQ,SAAArI,GACD,MAATA,GACAlH,EAAK4N,aAAa1G,KAI1ByI,EAAY3P,EAAK6P,aAAaF,GAE9B3P,EAAKC,SAAS,CACV8Q,aAAcpB,GACf,kBAAM3P,EAAKC,SAAS,CACnBgL,aAAa,aAUrC+F,cAAgB,SAAAtO,GACZ,GAAI1C,EAAKrD,MAAMiU,sBAAwB,CACnC,GAAwB,WAApB5Q,EAAKzC,MAAMyH,MAAqBhF,EAAKrD,MAAMsO,YAAa,CACxD,IAAM0E,EAAY3P,EAAKrD,MAAMoU,aAC7B/Q,EAAKoN,iBACLpN,EAAKC,SAAS,CAEViL,eAAgBlL,EAAKrD,MAAMiO,cAC5B,WAC4B,eAAxB5K,EAAKzC,MAAMwM,UACV/J,EAAK8P,UAAUH,GAEnB3P,EAAKzC,MAAMyO,aAAa2D,GACvBtS,KAAK,WACF2C,EAAKC,SAAS,CAAC8Q,aAAc,WAIjB,aAApB/Q,EAAKzC,MAAMyH,MACgB,eAAxBhF,EAAKzC,MAAMwM,UACV/J,EAAK8P,YAOjB9P,EAAKC,SAAS,CAAE2Q,uBAAuB,EAAOnB,cAAc,EAAO3E,cAAe,KAAMC,kBAAmB,KAAME,aAAa,OAIlImC,eAAiB,WACb,IACM9C,EADYtK,EAAKrD,MAAMwP,UACPC,WAAW,MAEjC9B,EAAIiD,UAAU,EAAG,EAAGvN,EAAKrD,MAAM6I,OAAOtF,MAAOF,EAAKrD,MAAM6I,OAAOnF,QAC/DiK,EAAI0C,UAAY,QAChB1C,EAAI2C,SAAS,EAAE,EAAEjN,EAAKrD,MAAM6I,OAAOtF,MAAOF,EAAKrD,MAAM6I,OAAOnF,QAE5DiK,EAAIkD,OACJlD,EAAImD,UAAUzN,EAAKrD,MAAM6I,OAAOtF,MAAM,EAAIF,EAAKrD,MAAMiO,aAAaxD,EAAGpH,EAAKrD,MAAM6I,OAAOnF,OAAO,EAAIL,EAAKrD,MAAMiO,aAAavD,GAE1HiD,EAAIoD,OAAO1N,EAAKrD,MAAM+N,OAEtBJ,EAAImD,YAAYzN,EAAKrD,MAAM6I,OAAOtF,MAAM,EAAIF,EAAKrD,MAAMiO,aAAaxD,KAAMpH,EAAKrD,MAAM6I,OAAOnF,OAAO,EAAIL,EAAKrD,MAAMiO,aAAavD,IAG/HiD,EAAI4C,UAAUlN,EAAKrD,MAAM8N,MAAOzK,EAAKrD,MAAMmQ,kBAAoB9M,EAAKrD,MAAMiO,aAAaxD,EAAKpH,EAAKrD,MAAMoQ,kBAAoB/M,EAAKrD,MAAMiO,aAAavD,EAAGrH,EAAKrD,MAAM8N,MAAMvK,MAAOF,EAAKrD,MAAM8N,MAAMpK,QAC/LiK,EAAIqD,UAuBJ,IAAIlN,EAAMG,OAAOqQ,GAAGC,OAAO,aACvBC,EAAMvQ,OAAOqQ,GAAGG,IAAIC,MAAM5Q,EAAI6Q,KAAM7Q,EAAI8Q,KAAM3Q,OAAOqQ,GAAGO,SAC5D5Q,OAAOqQ,GAAGQ,SAAShR,EAAKA,EAAKG,OAAOqQ,GAAGS,gBAAiB,GACxD9Q,OAAOqQ,GAAGU,UAAUlR,EAAKA,EAAK,IAAK,IAAKG,OAAOqQ,GAAGW,eAClD,IAAIC,EAAW,IAAIjR,OAAOqQ,GAAGa,UACzBC,EAAmB,IAAInR,OAAOqQ,GAAGa,UACjCE,EAAY,IAAIpR,OAAOqQ,GAAGG,IAC1Ba,EAAoB,IAAIrR,OAAOqQ,GAAGG,IAEtCxQ,OAAOqQ,GAAGiB,aAAazR,EAAKsR,EAAkBE,EAAmBrR,OAAOqQ,GAAGkB,cAAevR,OAAOqQ,GAAGmB,qBACpGxR,OAAOqQ,GAAGiB,aAAazR,EAAKoR,EAAUG,EAAWpR,OAAOqQ,GAAGoB,WAAYzR,OAAOqQ,GAAGmB,qBAGjF/Q,QAAQC,IAAI,OAGZ,IAFA,IAAIgR,EAAQ,EAEH7B,EAAI,EAAGA,EAAIsB,EAAiBQ,SAAU9B,EAGxCsB,EAAiBS,IAAI/B,GAAGgC,QAAQ,GAJ3B,KAKJpR,QAAQC,IAAIyQ,EAAiBS,IAAI/B,GAAGgC,QAAQ,IAC5CH,KAGRjR,QAAQC,IAAI,UAAYgR,GAExB,IAAK,IAAI7B,EAAI6B,EAAO7B,EAAIoB,EAASU,SAAU9B,EAIvC,GAAGoB,EAASW,IAAI/B,GAAGgC,QAAQ,GAfnB,GAiBJ,GADApR,QAAQC,IAAIuQ,EAASW,IAAI/B,GAAGgC,QAAQ,IACvB,IAAVH,EAAY,CAEX,IAAI1K,EAAQ,IAAIhH,OAAOqQ,GAAGyB,OAAO3E,KAAK4E,MAAsB,IAAhB5E,KAAK6E,UAAiB7E,KAAK4E,MAAsB,IAAhB5E,KAAK6E,UAC1D7E,KAAK4E,MAAsB,IAAhB5E,KAAK6E,WACxChS,OAAOqQ,GAAG4B,aAAa1B,EAAKU,EAAUpB,EAAG7I,EAAO,EAAGhH,OAAOqQ,GAAG6B,OAAQd,EAAW,UAEhFM,IAKZ1R,OAAOqQ,GAAG8B,OAAO,YAAa5B,GAC9B1Q,EAAIuS,SAAU7B,EAAI6B,SAAUnB,EAASmB,SAAUhB,EAAUgB,SAAUjB,EAAiBiB,SAAUf,EAAkBe,YAQpH3J,eAAiB,WAEb,IAAM4J,EAAU,SAAC3I,EAAKlD,EAAGC,EAAG6L,GAgCxB,IACM7Q,EADSiI,EAAI6I,aAAa/L,EAAGC,EAAG,EAAG,GACrBhF,KAEpB,OAAmB,IAAZA,EAAK,IAAwB,IAAZA,EAAK,IAAwB,IAAZA,EAAK,IAIlD,GAAGrC,EAAKrD,MAAMwO,aAAenL,EAAKrD,MAAMyO,aAAa,CACjD,IAMIgI,EAAOC,EALL/I,EADYtK,EAAKrD,MAAMwP,UACPC,WAAW,MAG7BkH,GAAU,EACRC,EAASvT,EAAKzC,MAAMwJ,OAAO,GAG9B/G,EAAKzC,MAAMwJ,OAAO,GAAGM,EAAIrH,EAAKzC,MAAMwJ,OAAO,GAAGM,GAC7C+L,EAAQpT,EAAKzC,MAAMwJ,OAAO,GAC1BsM,EAAUrT,EAAKzC,MAAMwJ,OAAO,KAE5BqM,EAAQpT,EAAKzC,MAAMwJ,OAAO,GAC1BsM,EAAUrT,EAAKzC,MAAMwJ,OAAO,IAGhC,IAUIyM,EAAQC,EAVNC,EAASN,EAAM/L,EAAI0G,KAAKuC,IAAI8C,EAAM/L,EAAIgM,EAAQhM,GAE9CsM,EAAWN,EAAQhM,EAAI0G,KAAKuC,IAAI8C,EAAM/L,EAAIgM,EAAQhM,GAElDuM,EAAUL,EAAOnM,EAAIgM,EAAMhM,EAAK,GAAO,EACvCyM,EAAOT,EAAMhM,EAAIwM,EAAQ7F,KAAKuC,IAAIiD,EAAOnM,EAAIgM,EAAMhM,GACzD/F,QAAQC,IAAIuS,GACZxS,QAAQC,IAAIoS,GACZrS,QAAQC,IAAIqS,GAGTC,EAAU,GACTJ,EAASD,EAAOnM,EAChBqM,EAASI,IAETL,EAASK,EACTJ,EAASF,EAAOnM,GAGpB,IAAI,IAAIC,EAAIqM,EAAQrM,EAAI+L,EAAM/L,EAAGA,GAAG,EAAE,CAElC,IAAI,IAAID,EAAIoM,EAAQpM,EAAIqM,EAAQrM,GAAG,EAM/B,GAAG6L,EAAQ3I,EAAKlD,EAAGC,GAAU,CAErBrH,EAAKC,SAAS,CACV6T,UAAY,CACR1M,EAAGA,EACHC,EAAGA,KAGXhG,QAAQC,IAAI8F,GACZ/F,QAAQC,IAAI+F,GACZiM,GAAU,EACV,MAGZ,GAAGA,EACC,MAIRA,GAAU,EACVjS,QAAQC,IAAI,QAAUuS,GACtBxS,QAAQC,IAAI,YAAc8R,EAAMhM,GAChC,IAAI,IAAI2M,EAAKJ,EAAUI,GAAMV,EAAQhM,EAAG0M,GAAI,EAAE,CAE1C,IAAI,IAAIC,EAAKP,EAAQO,GAAMR,EAAQQ,GAAI,EAEnC,GAAGf,EAAQ3I,EAAK0J,EAAID,GAAU,CACtB/T,EAAKC,SAAS,CACVgU,YAAc,CACV7M,EAAG4M,EACH3M,EAAG0M,KAGX1S,QAAQC,IAAI0S,GACZ3S,QAAQC,IAAIyS,GACZT,GAAU,EACV,MAGZ,GAAGA,EACC,MAIR,IAAMY,EAASnG,KAAKuC,IAAIiD,EAAOlM,EAAI0M,GAAKhG,KAAKuC,IAAIiD,EAAOlM,EAAIA,GAEtD8M,EAAOD,EAAQ,KAAQA,EAAQ,IAAQ,KAAS,SAEtD7S,QAAQC,IAAI,UAAY4S,GACxB7S,QAAQC,IAAI6S,GAEZ,IAAIC,EAAU,CAAC3V,GAAIuB,EAAKrD,MAAMgO,OAAS,EAAGvD,EAAGA,EAAGC,EAAGA,EAAGF,KAAM,OACxDkN,EAAY,CAAC5V,GAAIuB,EAAKrD,MAAMgO,OAAS,EAAGvD,EAAG4M,EAAI3M,EAAG0M,EAAI5M,KAAM,OAE5DwI,EAAS,GAAA/J,OAAAjD,OAAAiN,EAAA,EAAAjN,CAAO3C,EAAKzC,MAAMwJ,OAAO+C,MAAM,EAAE,IAAjC,CAAqCuK,EAAWD,IAE7DzE,EAAY3P,EAAK6P,aAAaF,GAE9B3P,EAAKqN,0BAA0B,GAC/BsC,EAAUJ,QAAQ,SAAArI,GACD,MAATA,GACAlH,EAAK4N,aAAa1G,KAI1BlH,EAAKC,SAAS,CAEV0K,OAAQ3K,EAAKrD,MAAMgO,OAAS,GAC7B,WACC3K,EAAKzC,MAAMyO,aAAa2D,GACvBtS,KAAK,WACF2C,EAAK8P,oBASrBA,UAAY,SAACwE,GAET,IAAMvN,EAASuN,GAA8BtU,EAAKzC,MAAMwJ,OACnC,IAAlBA,EAAO2C,SAEN1J,EAAKqO,wBAAwBtH,EAAO,GAAIA,EAAO,IAC/C/G,EAAKqO,wBAAwBtH,EAAO,GAAIA,EAAO,IAC/C/G,EAAKqO,wBAAwBtH,EAAO,IACpC/G,EAAKqO,wBAAwBtH,EAAO,IACpC/G,EAAKqO,wBAAwBtH,EAAO,QAK5C8I,aAAe,SAAC9I,GAiCZ,OAhCqB,IAAlBA,EAAO2C,SACN3C,EAAO,GAAGI,KAAO,UAElBJ,EAAO2C,OAAS,IACZ3C,EAAO,GAAGM,EAAIN,EAAO,GAAGM,GACvBN,EAAO,GAAGI,KAAO,SACjBJ,EAAO,GAAGI,KAAO,aAEjBJ,EAAO,GAAGI,KAAO,SACjBJ,EAAO,GAAGI,KAAO,aAItBJ,EAAO2C,OAAS,IACf3C,EAAO,GAAGI,KAAO,MAGA,IAAlBJ,EAAO2C,SACN3C,EAAO,GAAGI,KAAO,SAGlBJ,EAAO2C,OAAS,IACZ3C,EAAO,GAAGM,EAAIN,EAAO,GAAGM,GACvBN,EAAO,GAAGI,KAAO,QACjBJ,EAAO,GAAGI,KAAO,YAEjBJ,EAAO,GAAGI,KAAO,QACjBJ,EAAO,GAAGI,KAAO,YAKlBJ,KAIXoI,YAAc,SAAC3J,EAAQ+O,GACnB,IAAIC,EAAOhP,EAAOiP,wBAClB,MAAO,CAAErN,EAAImN,EAAIG,QAAUF,EAAKG,KAAOtN,EAAIkN,EAAIK,QAAUJ,EAAKK,QAGlEzF,QAAU,SAAChI,EAAGC,GACV,IACIH,EAAQ,CAAEE,EAAGA,EAAGC,EAAGA,GAEvB,OADAH,EAFWzK,EAAEqY,QAAQrY,GAEVsY,aAAa7N,EAAME,EAAGF,EAAMG,MAI3CmI,UAAY,SAACN,EAAOhI,GAChB,OAAO6G,KAAKiH,KAAKjH,KAAAkH,IAAC/N,EAAME,EAAI8H,EAAM9H,EAAM,GAAvB2G,KAAAkH,IAA4B/N,EAAMG,EAAI6H,EAAM7H,EAAM,IAAK,OAI5E6N,cAAgB,WAEZ,IAAMtM,EAAU,CAACnK,GAAIsP,KAAK4E,MAAsB,IAAhB5E,KAAK6E,UAAiBzL,KAAM,QAAU4G,KAAK4E,MAAsB,IAAhB5E,KAAK6E,WACtF5S,EAAKzC,MAAM4X,cAAcvM,wLAGHwM,GAAU,IAAArU,EAAAJ,KAEL,aAAxBA,KAAKpD,MAAMwM,UAAkD,WAAvBqL,EAAUrL,UAC/CpJ,KAAKsP,eAGkB,WAAxBtP,KAAKpD,MAAMwM,UAAgD,eAAvBqL,EAAUrL,UAC7CpJ,KAAK0I,iBAGkB,eAAxB1I,KAAKpD,MAAMwM,UAAoD,WAAvBqL,EAAUrL,UACjDpJ,KAAKuU,gBAGkB,WAAxBvU,KAAKpD,MAAMwM,UAAgD,aAAvBqL,EAAUrL,WAC7CpJ,KAAKV,SAAS,CAACkL,aAAa,EAAOT,MAAO,IAC1C/J,KAAKpD,MAAMyO,aAAa,IACxBrL,KAAKpD,MAAM4X,cAAc,KAGF,WAAxBxU,KAAKpD,MAAMwM,UAAgD,aAAvBqL,EAAUrL,UAC7CpJ,KAAKpD,MAAMyO,aAAarL,KAAKpD,MAAMwJ,OAAO+C,MAAM,EAAE,IACjDzM,KAAK,WACF0D,EAAK4P,wBAKc,eAAxBhQ,KAAKpD,MAAMwM,UAAoD,WAAvBqL,EAAUrL,UACjDpJ,KAAKpD,MAAMyO,aAAarL,KAAKpD,MAAMwJ,OAAO+C,MAAM,EAAE,IACjDzM,KAAK,WACF0D,EAAKgP,0BAIc,WAAxBpP,KAAKpD,MAAMwM,UAAgD,eAAvBqL,EAAUrL,UAC7CpJ,KAAKpD,MAAM4X,cAAc,qCAKxB,IAAAE,EAAA1U,KAECwK,EAAcxK,KAAKhE,MAAMwO,YAEzBmK,EAAsC,aAAxB3U,KAAKpD,MAAMwM,SAC3BvM,EAAAC,EAAAC,cAAC6X,GAAD,CACI5O,YAAa,kBAAM0O,EAAKpV,SAAS,CAAEgM,SAAS,KAC5CrF,OAAQ,SAAC4E,EAAOnF,GAAR,OAAiBgP,EAAK9J,mBAAmBC,EAAOnF,EAAM,IAC9DmP,KAAM7U,KAAKhE,MAAM8Y,aACjB9I,SAAUhM,KAAKhE,MAAMgQ,WAGzB,KAGE+I,EAAavK,GAAuC,WAAxBxK,KAAKpD,MAAMwM,SACzCvM,EAAAC,EAAAC,cAACiY,EAAD,MAEA,KAEEC,EAAiBzK,EACnB3N,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACPH,EAAAC,EAAAC,cAAA,UAAQe,GAAG,SAASwC,IAAI,SAASf,MAAOS,KAAKhE,MAAM4N,YAAalK,OAAQM,KAAKhE,MAAM6N,aAAcqL,YAAalV,KAAKsO,gBAAiB6G,UAAWnV,KAAKqQ,cAAe+E,YAAapV,KAAKkQ,kBACrLrT,EAAAC,EAAAC,cAAA,UAAQe,GAAG,YAAYwC,IAAI,YAAYf,MAAOS,KAAKhE,MAAM4N,YAAalK,OAAQM,KAAKhE,MAAM6N,iBAIrGhN,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,uBAMIwN,GAEhB3N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACPH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCG,QAAS6C,KAAKsP,cAArE,iCAERzS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCG,QAAS6C,KAAK0I,gBAArE,qBAEJ7L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCG,QAAS6C,KAAKgQ,qBAArE,gCAOhB,OAEAnT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACsY,EAAAvY,EAAD,CACIwY,IAAI,kDACJrP,OAAQjG,KAAK0K,iBAAiB6K,KAAKvV,QAEvCnD,EAAAC,EAAAC,cAACsY,EAAAvY,EAAD,CACIwY,IAAI,0CACJrP,OAAQjG,KAAK2K,iBAAiB4K,KAAKvV,QAEvCnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEV2X,EACAI,EACAE,GAILpY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAACyY,GAAD,CACI9M,eAAkB1I,KAAK0I,eACvBrC,YAAerG,KAAKqG,YACpB0B,aAAgB/H,KAAK+H,gBAbjC,aAx/BSvH,aAsiCNzE,eAnBS,SAACC,GACrB,MAAO,CACHoN,SAAUpN,EAAM6I,OAAOuE,SACvB/E,KAAMrI,EAAM6I,OAAOR,KACnB+B,OAAQpK,EAAM6I,OAAOuB,OACrBoC,eAAgBxM,EAAM6I,OAAOuB,OAAO+C,MAAM,EAAE,GAC5CV,aAAczM,EAAM6I,OAAOuB,OAAO+C,MAAM,EAAE,GAC1CR,cAAe3M,EAAM6I,OAAOuB,OAAO+C,MAAM,EAAE,KAIxB,SAAC/M,GACxB,MAAO,CACHiP,aAAc,SAACjF,GAAD,OAAYhK,EgB3iCN,SAACgK,GACzB,OAAO,SAAAhK,GACL,OAAO,IAAIiN,QAAQ,SAACC,EAASC,GAC3BnN,EAAS,CACLO,KAAM,gBACNyJ,OAAQA,IAGZkD,OhBmiCmC+B,CAAajF,KAChDoO,cAAe,SAACvM,GAAD,OAAa7L,EgBlhCP,SAAC6L,GAC1B,OAAO,SAAA7L,GACL,OAAO,IAAIiN,QAAQ,SAACC,EAASC,GAC3BnN,EAAS,CACLO,KAAM,iBACNsL,QAASA,IAGbqB,OhB0gCqCkL,CAAcvM,OAK5ClM,CAA6C2N,IoB1hC7C+L,oLAlBX,OACE5Y,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC2Y,EAAD,MACA7Y,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACElE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO4U,OAAK,EAACC,KAAO,IAAIC,UAAWpV,IACnC5D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO6U,KAAO,eAAeC,UAAWC,IACxCjZ,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO6U,KAAO,UAAUC,UAAWlU,IACnC9E,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO6U,KAAO,UAAUC,UAAW7S,IACnCnG,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO6U,KAAO,UAAUC,UAAWlS,IACnC9G,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO6U,KAAO,UAAUC,UAAWnM,eAZ7BlJ,aCEEuV,QACW,cAA7B9V,OAAO+V,SAASC,UAEe,UAA7BhW,OAAO+V,SAASC,UAEhBhW,OAAO+V,SAASC,SAASzU,MACvB,2DClBN,IAAM0U,GAAY,CACd3T,UAAW,MAsCA4T,GAlCK,WAA+B,IAA9Bna,EAA8Boa,UAAArN,OAAA,QAAAsN,IAAAD,UAAA,GAAAA,UAAA,GAAtBF,GAAWI,EAAWF,UAAArN,OAAA,EAAAqN,UAAA,QAAAC,EAC/C,OAAQC,EAAO3Z,MACX,IAAK,cAED,OADA+D,QAAQC,IAAI,eACLqB,OAAAiC,EAAA,EAAAjC,CAAA,GACAhG,EADP,CAEIuG,UAAW,iBAEnB,IAAK,gBAED,OADA7B,QAAQC,IAAI,iBACLqB,OAAAiC,EAAA,EAAAjC,CAAA,GACAhG,EADP,CAEIuG,UAAW,OAEnB,IAAK,iBAED,OADA7B,QAAQC,IAAI,mBACL3E,EACX,IAAK,iBAED,OADA0E,QAAQC,IAAI,kBACLqB,OAAAiC,EAAA,EAAAjC,CAAA,GACAhG,EADP,CAEIuG,UAAW,OAEnB,IAAK,eAED,OADA7B,QAAQC,IAAI,gBACLqB,OAAAiC,EAAA,EAAAjC,CAAA,GACAhG,EADP,CAEIuG,UAAW+T,EAAOvT,IAAIwT,UAE9B,QACI,OAAOva,ICnCbka,GAAY,CACdpX,SAAU,CACN,CAAChB,GAAI,IAAKU,MAAO,QAASR,QAAS,YACnC,CAACF,GAAI,IAAKU,MAAO,QAASR,QAAS,YACnC,CAACF,GAAI,IAAKU,MAAO,QAASR,QAAS,cAyB5BwY,GAnBQ,WAA+B,IAA9Bxa,EAA8Boa,UAAArN,OAAA,QAAAsN,IAAAD,UAAA,GAAAA,UAAA,GAAtBF,GAAWI,EAAWF,UAAArN,OAAA,EAAAqN,UAAA,QAAAC,EAClD,OAAOC,EAAO3Z,MACV,IAAK,iBAOD,OAAOX,EACX,IAAK,uBAED,OADA0E,QAAQC,IAAI,uBAAwB2V,EAAOvT,KACpC/G,EACX,QACI,OAAOA,aCxBbka,GAAY,CACd9M,SAAU,WACV/E,KAAM,SACN+B,OAAS,GACT6B,QAAU,IAwCCwO,GAnCO,WAA+B,IAA9Bza,EAA8Boa,UAAArN,OAAA,QAAAsN,IAAAD,UAAA,GAAAA,UAAA,GAAtBF,GAAWI,EAAWF,UAAArN,OAAA,EAAAqN,UAAA,QAAAC,EACjD,OAAOC,EAAO3Z,MACV,IAAK,cAED,OAAOqF,OAAAiC,EAAA,EAAAjC,CAAA,GACAhG,EADP,CAEIqI,KAAMiS,EAAOjS,OAGrB,IAAK,gBACD,OAAOrC,OAAAiC,EAAA,EAAAjC,CAAA,GACAhG,EADP,CAEIoK,OAAQkQ,EAAOlQ,SAEvB,IAAK,mBACD,OAAOpE,OAAAiC,EAAA,EAAAjC,CAAA,GACAhG,EADP,CAEIoN,SAAUkN,EAAOlN,WAEzB,IAAK,iBACD,OAAOpH,OAAAiC,EAAA,EAAAjC,CAAA,GACAhG,EADP,CAEIiM,QAASqO,EAAOrO,UAExB,IAAK,iBACD,OAAOjG,OAAAiC,EAAA,EAAAjC,CAAA,GACAhG,GAGX,QACI,OAAOA,ICvBJ0a,GARKC,YAAiB,CACjCla,KAAM0Z,GACN5X,QAASiY,GACTvV,UAAW2V,oBACX1a,SAAU2a,kBACVhS,OAAQ4R,kDCAZva,KAAS4a,cARI,CACTC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,iBAMRlb,UAAf,ECFMmb,GAAQC,YAAYZ,GACtB1V,YACIuW,YAAgBC,KAAMC,kBAAkB,CAACjb,0BAAa8G,gCACtDoU,0BAAeC,IACfC,6BAAmBD,GAAU,CAACE,wBAAwB,EAAMC,YAAa,QAAUC,mBAAoB,MAM/GV,GAAMW,oBAAoBtb,KAAK,WAC3Bub,IAASC,OAAOrb,EAAAC,EAAAC,cAACob,EAAA,EAAD,CAAUd,MAAOA,IAAOxa,EAAAC,EAAAC,cAACqb,GAAD,OAAoBC,SAASC,eAAe,SNuGlF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/b,KAAK,SAAAgc,GACjCA,EAAaC","file":"static/js/main.1f15413b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video.61e3654e.mp4\";","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Script from 'react-load-script'\r\n\r\n\r\nimport ActionBar from './ActionBar'\r\nimport LoadPhotoBox from './LoadPhotoBox';\r\nimport Slider from './Slider'\r\n\r\nimport {updatePoints} from '../../store/actions/canvasActions'\r\nimport {updateResults} from '../../store/actions/canvasActions'\r\nimport mod from 'react-swipeable-views-core/lib/mod';\r\n\r\nvar Matrix = require(\"transformation-matrix-js\").Matrix;\r\n\r\nexport let m\r\n\r\n\r\nclass Canvas extends Component {\r\n\r\n    state = {\r\n        ctx : null,\r\n        canvasWidth: 600,\r\n        canvasHeight: 800,\r\n        myImg : null,\r\n        points: [],\r\n        theta: 0,\r\n        baseId: 0,\r\n        mode: 'moving',\r\n        canvasOffset: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        lastClick: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        selectedPoint: null,\r\n        selectedPointName: null,\r\n        pointisMoved: false,\r\n        movingEnded: false,\r\n        previousOffset: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        imageLoaded: false,\r\n        scriptLoaded: false\r\n    }\r\n\r\n    handleScriptLoad = () => {\r\n        //this.setState({ scriptLoaded: true })\r\n    }\r\n\r\n    handleOpenCVLoad = () => {\r\n        this.setState({ scriptLoaded: true })\r\n    }\r\n\r\n    handleFileSelected = (event, file, number) => {\r\n\r\n        //this.setState({ [number > 0 ? 'suppFileIcon' : 'mainFileIcon']: 'file-image' })\r\n        let image = new Image()\r\n        image.src = event.target.result\r\n        //console.log(image.height);\r\n        //console.log(file);\r\n        const fileUrl = window.URL.createObjectURL(file)\r\n        image.onload = () => {\r\n            this.props.updatePoints([]);\r\n            //const ratio = image.naturalWidth / image.naturalHeight\r\n            //this.props.onImageLoad(file.name, fileUrl, ratio, number)\r\n            this.setState({ loading: false, imageLoaded: true, theta: 0 }, () =>{\r\n\r\n                const canvas = this.refs.canvas\r\n                const newCanvas = this.refs.newCanvas\r\n                const ctx = canvas.getContext(\"2d\")\r\n                //const myImg = new Image()\r\n                //myImg.src = img;\r\n                image.setAttribute('crossOrigin', 'anonymous');\r\n                \r\n                const naturalImageWidth = image.width;\r\n                const naturalImageHeight = image.height;\r\n\r\n\r\n                let ratio =  image.width / image.height;\r\n                console.log(image.height);\r\n                image.height = this.state.canvasHeight - 100;\r\n                image.width = image.height * ratio;\r\n                console.log(image.height);\r\n\r\n                \r\n                \r\n\r\n                let offsetX = (canvas.width - image.width) /2;\r\n                let offsetY = (canvas.height - image.height) /2\r\n                \r\n                this.setState({\r\n                    canvas : canvas,\r\n                    ctx : ctx, \r\n                    myImg : image,\r\n                    fileName: file.name,\r\n                    newCanvas: newCanvas,\r\n                    imageLoaded: true,\r\n                    imageXRatio: naturalImageWidth/ image.width,\r\n                    imageYRatio: naturalImageHeight/ image.height,\r\n                    canvasOffsetXInit: offsetX,\r\n                    canvasOffsetYInit: offsetY\r\n                }, () => {\r\n                    ctx.fillStyle = 'grey';\r\n                    ctx.fillRect(0,0,canvas.width, canvas.height);\r\n                    ctx.drawImage(image, offsetX, offsetY, image.width, image.height)\r\n                    //ctx.drawImage(myImg, 0, 0)\r\n                    ctx.font = \"40px Courier\"\r\n                    m = new Matrix(this.state.ctx);\r\n                    //ctx.fillText(\"Test\", 50, 50)\r\n                    //ctx.fillText(\"Test!\", 50, 150)\r\n                    console.log(this.props)\r\n                    if(this.state.scriptLoaded)\r\n                        this.doThresholding();\r\n                })\r\n\r\n                    \r\n                    \r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log(this.props.appState)\r\n    }\r\n\r\n\r\n  \r\n\r\n\r\n    ctxMakeBackgroundAngImage = (theta, reset) => {\r\n\r\n        const ctx = this.state.ctx;\r\n        \r\n        ctx.clearRect(0, 0, this.state.canvas.width, this.state.canvas.height);\r\n        ctx.fillStyle = 'grey';\r\n        ctx.fillRect(0,0,this.state.canvas.width, this.state.canvas.height);\r\n        \r\n        ctx.save();\r\n        ctx.translate(this.state.canvas.width/2 + this.state.canvasOffset.x, this.state.canvas.height/2 + this.state.canvasOffset.y);\r\n        \r\n        !reset ? (ctx.rotate(this.state.theta + theta)) : (ctx.rotate(0));\r\n        \r\n        ctx.translate(-(this.state.canvas.width/2 + this.state.canvasOffset.x), -(this.state.canvas.height/2 + this.state.canvasOffset.y));\r\n\r\n        //ctx.drawImage(this.state.myImg, (this.state.canvas.width + this.state.canvasOffset.x - this.state.myImg.width) /2 , (this.state.canvas.height + this.state.canvasOffset.y - this.state.myImg.height) /2 );    \r\n        ctx.drawImage(this.state.myImg, this.state.canvasOffsetXInit + this.state.canvasOffset.x  , this.state.canvasOffsetYInit + this.state.canvasOffset.y, this.state.myImg.width, this.state.myImg.height);  \r\n        ctx.restore();\r\n\r\n    }\r\n\r\n    ctxMakePoint = (point) => {\r\n        const ctx = this.state.ctx;\r\n\r\n        ctx.fillStyle = \"#c82124\"; //red\r\n        ctx.beginPath();\r\n        ctx.arc(point.x, point.y, 3, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.stroke()\r\n\r\n        ctx.save()\r\n        ctx.translate(point.x, point.y)\r\n        ctx.fillStyle = 'red';\r\n        ctx.font = \"bold \" + (Math.max(8,(11+1)/1)) + \"px Arial\";\r\n        ctx.fillText(point.name, 0+3, 0 -3);\r\n        ctx.restore()\r\n    }\r\n\r\n    calculateAndCtxMakeLine = (point1, point2) => {\r\n        const ctx = this.state.ctx;\r\n        \r\n        let outYStart;\r\n        let outYEnd;\r\n        let outXStart;\r\n        let outXEnd;\r\n        \r\n        \r\n        if(point2 != null){\r\n            let deltaX = point1.x - point2.x;\r\n            console.log(deltaX);\r\n\r\n            if(deltaX === 0){\r\n                outXStart = point1.x;\r\n                outXEnd = point2.x;\r\n                outYStart = 0\r\n                outYEnd = this.state.canvas.height;\r\n            }else{\r\n\r\n                let a = (point1.y - point2.y)/(point1.x - point2.x);\r\n                let b = point1.y - a*point1.x;\r\n                let xmax = this.state.canvas.width\r\n                \r\n                outYStart = b;\r\n                outYEnd = a*xmax + b;\r\n                outXStart = 0;\r\n                outXEnd = xmax;\r\n            }\r\n        }else{\r\n                outXStart = 0;\r\n                outXEnd = this.state.canvas.width;\r\n                outYStart = point1.y;\r\n                outYEnd = point1.y;\r\n        }\r\n\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(outXStart, outYStart);\r\n        ctx.lineTo(outXEnd, outYEnd);\r\n        ctx.stroke();\r\n    }\r\n\r\n    \r\n\r\n    handleMouseDown = (e) => {\r\n\r\n        let mouse = this.getMousePos(this.state.canvas, e);\r\n        mouse = this.toWorld(mouse.x, mouse.y);\r\n\r\n\r\n        if(this.props.mode === 'addition'){\r\n\r\n            let max = false;\r\n            let end = false;\r\n            let points = [];\r\n            let name = [];\r\n            switch(this.props.appState){\r\n                case 'position':\r\n                    points = this.props.positionPoints;\r\n                    points.length > 1 ? (max = true) : (max = false)\r\n                    break;\r\n                case 'tragus':\r\n                    points = this.props.tragusPoints;\r\n                    points.length > 0 ? (max = true) : (max = false)\r\n                    break;\r\n                case 'correction':\r\n                    points = this.props.extremePoints;\r\n                    points.length > 1 ? (max = true) : (max = false)\r\n                    break;\r\n                case 'extreme':\r\n                    end = true;\r\n                    max = true;\r\n                    break;\r\n                default:\r\n                    end = true;\r\n                    max = true;\r\n                \r\n            }\r\n\r\n            let pointToMove = false;\r\n            if(!end){\r\n                points.forEach(point => {\r\n                \r\n                    if (point != null) {\r\n                        if(this.isBetween(mouse, point)){\r\n                            this.setState({ selectedPoint: point.id, selectedPointName: point.name,  pointIsMoved: true })\r\n                                \r\n                                pointToMove = true;\r\n                                point.stroke = '#F2C553'\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n            if(!pointToMove){\r\n                if(!max){\r\n                    let point = {id: this.state.baseId + 1, x: mouse.x, y: mouse.y, name: name}\r\n                    \r\n                    let newPoints = [...this.props.points, point];\r\n                    \r\n                    console.log(point);\r\n                    newPoints = this.refreshNames(newPoints);\r\n                    console.log(newPoints[2]);\r\n                    this.ctxMakeBackgroundAngImage(0);\r\n                    newPoints.forEach(point => {\r\n                        if (point != null) {\r\n                            this.ctxMakePoint(point);\r\n                        }\r\n                    })\r\n                    \r\n                    this.setState({\r\n                        //points: [point, ...this.state.points],\r\n                        baseId: this.state.baseId + 1\r\n                    }, () => {\r\n                        this.drawLines(newPoints);\r\n                        this.props.updatePoints(newPoints)\r\n                    })\r\n                }\r\n            }else{\r\n                this.activateMove(e)\r\n            }\r\n        \r\n            \r\n        }else if(this.props.mode === 'moving'){\r\n            this.activateMove(e)\r\n        }\r\n    }\r\n\r\n\r\n    deleteLinesAndRefresh = () => {\r\n        this.ctxMakeBackgroundAngImage(0);\r\n\r\n        this.props.points.forEach(point => {\r\n            if (point != null) {\r\n                this.ctxMakePoint(point);\r\n            }\r\n        })\r\n    }\r\n\r\n    deletePoint = (id) => {\r\n        \r\n        this.ctxMakeBackgroundAngImage(0);\r\n\r\n        let pointList = this.props.points.filter((point) => {\r\n            return point.id !== id;\r\n        })\r\n\r\n        pointList = this.refreshNames(pointList);\r\n\r\n        pointList.forEach(point => {\r\n            if (point != null) {\r\n                this.ctxMakePoint(point);\r\n            }\r\n        })\r\n\r\n        \r\n        \r\n        //this.setState({\r\n            //points: pointList\r\n        //}, () => {\r\n        this.props.updatePoints(pointList);\r\n        //})\r\n\r\n    }\r\n\r\n\r\n    handleRotate = () => {\r\n        const lastTwoPoints = this.props.positionPoints;\r\n        //console.log(lastTwoPoints); //[0] up\r\n        if(lastTwoPoints.length === 2){\r\n            let upPoint = null;\r\n            let downPoint = null;\r\n            \r\n            if(lastTwoPoints[0].y >= lastTwoPoints[1].y){\r\n                upPoint = lastTwoPoints[0];\r\n                downPoint = lastTwoPoints[1];\r\n            }else{\r\n                upPoint = lastTwoPoints[1];\r\n                downPoint = lastTwoPoints[0];\r\n            }\r\n\r\n            let theta = Math.atan(Math.abs(upPoint.x - downPoint.x) / Math.abs(upPoint.y - downPoint.y))\r\n            if(upPoint.x < downPoint.x){\r\n                theta = (-1) * theta;\r\n            }\r\n            console.log(theta);\r\n\r\n            //rotate only image with theta param\r\n\r\n            this.ctxMakeBackgroundAngImage(theta);\r\n\r\n           \r\n\r\n            let offsetX = this.state.canvasOffset.x \r\n            let offsetY = this.state.canvasOffset.y \r\n            \r\n            //rotate points, grab new coor\r\n            m.translate(this.state.canvas.width/2 + offsetX, this.state.canvas.height/2 + offsetY);\r\n            m.rotate(theta);\r\n            m.translate(-(this.state.canvas.width/2 + offsetX),-(this.state.canvas.height/2 + offsetY));\r\n\r\n\r\n            let translatedPoints = m.applyToArray(this.props.points);\r\n            console.log(translatedPoints);\r\n\r\n            m.reset();\r\n            \r\n            \r\n            //rewrite new coords and draw points\r\n\r\n\r\n            let newPoints = [];\r\n            for(let i=0; i<translatedPoints.length; i++){\r\n                let newPoint = {id: this.props.points[i].id, x: translatedPoints[i].x, y: translatedPoints[i].y, name: this.props.points[i].name};\r\n                newPoints = [newPoint, ...newPoints];\r\n\r\n            }\r\n\r\n            newPoints = this.refreshNames(newPoints);\r\n\r\n            newPoints.forEach(point => {\r\n                if (point != null) {\r\n                    this.ctxMakePoint(point);\r\n                }\r\n            })\r\n\r\n            \r\n    \r\n            this.setState({\r\n                //points: newPoints,\r\n                theta: theta + this.state.theta\r\n            },() =>{\r\n                this.props.updatePoints(newPoints);\r\n                this.doThresholding();\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleCenterRestore = () => {\r\n\r\n        this.setState({\r\n            canvasOffset: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n            \r\n        }, () => {\r\n            this.ctxMakeBackgroundAngImage(null, true); //reset param true\r\n\r\n            let offsetX = this.state.previousOffset.x \r\n            let offsetY = this.state.previousOffset.y\r\n\r\n\r\n            //rotate points, grab new coor\r\n            m.translate(this.state.canvas.width/2 + offsetX, this.state.canvas.height/2 + offsetY);\r\n            m.rotate(-this.state.theta);\r\n            m.translate(-(this.state.canvas.width/2 + offsetX),-(this.state.canvas.height/2 + offsetY));\r\n\r\n\r\n            let translatedPoints = m.applyToArray(this.props.points);\r\n            console.log(translatedPoints);\r\n\r\n            m.reset();\r\n            \r\n            //rewrite new coords and draw points\r\n\r\n\r\n            let newPoints = [];\r\n            for(let i=0; i<translatedPoints.length; i++){\r\n                let newPoint = {id: this.props.points[i].id, x: translatedPoints[i].x - offsetX, y: translatedPoints[i].y - offsetY, name: this.props.points[i].name};\r\n                newPoints = [...newPoints, newPoint];\r\n\r\n            }\r\n\r\n            newPoints = this.refreshNames(newPoints);\r\n\r\n            newPoints.forEach(point => {\r\n                if (point != null) {\r\n                    this.ctxMakePoint(point);\r\n                }\r\n            })\r\n\r\n            \r\n\r\n            this.setState({\r\n                //points: newPoints,\r\n                theta: 0,\r\n                previousOffset: {\r\n                    x: 0,\r\n                    y: 0,\r\n                },\r\n            }, () => {\r\n                this.props.updatePoints(newPoints)\r\n                    \r\n                this.doThresholding();\r\n                //this.doThresholding();\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    activateMove = (e) => {\r\n        let mouse = this.getMousePos(this.state.canvas, e);\r\n        let lastClick = { x: mouse.x - this.state.canvasOffset.x, y: mouse.y - this.state.canvasOffset.y}\r\n        this.setState({ lastClick: lastClick, handleMouseMoveActive: true })\r\n\r\n    }\r\n\r\n    handleMouseMove = (event) => {\r\n\r\n\r\n        if (this.state.handleMouseMoveActive) {\r\n            var mouse = this.getMousePos(this.state.canvas, event);\r\n            \r\n            if (this.props.mode === 'addition' && this.state.pointIsMoved) {\r\n\r\n                this.ctxMakeBackgroundAngImage(0);\r\n                mouse = this.toWorld(mouse.x, mouse.y);\r\n\r\n\r\n                let pointList = this.props.points.filter((point) => {\r\n                    return point.id !== this.state.selectedPoint;\r\n                })\r\n\r\n        \r\n\r\n                let point = {id: this.state.selectedPoint, x: mouse.x, y: mouse.y, name: this.state.selectedPointName}\r\n                pointList = [...pointList, point];\r\n\r\n                pointList = this.refreshNames(pointList);\r\n\r\n                pointList.forEach(point => {\r\n                    if (point != null) {\r\n                        this.ctxMakePoint(point);\r\n                    }\r\n                })\r\n\r\n                this.setState({\r\n                    //points: pointList\r\n                }, () =>{\r\n                    this.props.updatePoints(pointList);\r\n                })\r\n            } else if (this.props.mode === 'moving') {\r\n                var mx = mouse.x - this.state.lastClick.x;\r\n                var my = mouse.y - this.state.lastClick.y;\r\n                let offset = { x: mx, y: my }\r\n                this.setState({ canvasOffset: offset,\r\n                                movingEnded: false}, \r\n                    () => {\r\n                        this.ctxMakeBackgroundAngImage(0);\r\n\r\n                        //rewrite new coords and draw points\r\n\r\n                        let offsetX = this.state.canvasOffset.x - this.state.previousOffset.x;\r\n                        let offsetY = this.state.canvasOffset.y - this.state.previousOffset.y\r\n                        let newPoints = [];\r\n                        \r\n                        for(let i=0; i<this.props.points.length; i++){\r\n                            let newPoint = {id: this.props.points[i].id, x: this.props.points[i].x + offsetX, y: this.props.points[i].y + offsetY, name: this.props.points[i].name};\r\n                            newPoints = [...newPoints, newPoint];\r\n\r\n                        }\r\n\r\n                        newPoints.forEach(point => {\r\n                            if (point != null) {\r\n                                this.ctxMakePoint(point);\r\n                            }\r\n                        })\r\n\r\n                        newPoints = this.refreshNames(newPoints);\r\n                        \r\n                        this.setState({\r\n                            movingPoints: newPoints\r\n                        }, () => this.setState({\r\n                            movingEnded: true\r\n                        }))\r\n\r\n                    }\r\n                )\r\n            \r\n            }\r\n        }\r\n    }\r\n\r\n    handleMouseUp = e => {\r\n        if (this.state.handleMouseMoveActive ) {\r\n            if (this.props.mode === 'moving' && this.state.movingEnded) {\r\n                const newPoints = this.state.movingPoints;\r\n                this.doThresholding();\r\n                this.setState({\r\n                    //points: newPoints,\r\n                    previousOffset: this.state.canvasOffset\r\n                }, () => { \r\n                    if(this.props.appState === 'correction'){\r\n                        this.drawLines(newPoints);\r\n                    }\r\n                    this.props.updatePoints(newPoints)\r\n                    .then(() => {\r\n                        this.setState({movingPoints: null})})\r\n                    });\r\n                          \r\n            }\r\n            if (this.props.mode === 'addition'){\r\n                if(this.props.appState === 'correction'){\r\n                    this.drawLines();\r\n                }\r\n            }\r\n        \r\n        \r\n        }\r\n        \r\n        this.setState({ handleMouseMoveActive: false, pointIsMoved: false, selectedPoint: null, selectedPointName: null, movingEnded: false})\r\n    }\r\n\r\n\r\n    doThresholding = () => {\r\n        const newCanvas = this.state.newCanvas\r\n        const ctx = newCanvas.getContext(\"2d\");\r\n        \r\n        ctx.clearRect(0, 0, this.state.canvas.width, this.state.canvas.height);\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0,0,this.state.canvas.width, this.state.canvas.height);\r\n        \r\n        ctx.save();\r\n        ctx.translate(this.state.canvas.width/2 + this.state.canvasOffset.x, this.state.canvas.height/2 + this.state.canvasOffset.y);\r\n        \r\n        ctx.rotate(this.state.theta);\r\n        \r\n        ctx.translate(-(this.state.canvas.width/2 + this.state.canvasOffset.x), -(this.state.canvas.height/2 + this.state.canvasOffset.y));\r\n\r\n    \r\n        ctx.drawImage(this.state.myImg, this.state.canvasOffsetXInit + this.state.canvasOffset.x  , this.state.canvasOffsetYInit + this.state.canvasOffset.y, this.state.myImg.width, this.state.myImg.height);  \r\n        ctx.restore();\r\n\r\n\r\n\r\n        /*const image = new window.MarvinImage();\r\n\r\n        \r\n        \r\n        const imageLoaded = () => {\r\n            \r\n            var imageOut = new window.MarvinImage(image.getWidth(), image.getHeight());\r\n            // Edge Detection (Prewitt approach)\r\n            window.Marvin.prewitt(image, imageOut);\r\n            // Invert color\r\n            window.Marvin.invertColors(imageOut, imageOut);\r\n            // Threshold\r\n            window.Marvin.thresholding(imageOut, imageOut, 210);\r\n            imageOut.draw(newCanvas);\r\n\r\n          }\r\n\r\n        image.load(newCanvas.toDataURL(), imageLoaded); */\r\n\r\n        let src = window.cv.imread('newCanvas');\r\n        let dst = window.cv.Mat.zeros(src.rows, src.cols, window.cv.CV_8UC3);\r\n        window.cv.cvtColor(src, src, window.cv.COLOR_RGBA2GRAY, 0);\r\n        window.cv.threshold(src, src, 215, 200, window.cv.THRESH_BINARY);\r\n        let contours = new window.cv.MatVector();\r\n        let contoursExternal = new window.cv.MatVector();\r\n        let hierarchy = new window.cv.Mat();\r\n        let hierarchyExternal = new window.cv.Mat();\r\n        // You can try more different parameters\r\n        window.cv.findContours(src, contoursExternal, hierarchyExternal, window.cv.RETR_EXTERNAL, window.cv.CHAIN_APPROX_SIMPLE);\r\n        window.cv.findContours(src, contours, hierarchy, window.cv.RETR_CCOMP, window.cv.CHAIN_APPROX_SIMPLE);\r\n        // draw contours with random Scalar\r\n        \r\n        console.log(\"new\")\r\n        var avoid = 0;\r\n        var limit = 32;\r\n        for (let i = 0; i < contoursExternal.size(); ++i) {\r\n            \r\n            \r\n            if(contoursExternal.get(i).matSize[0] > limit){\r\n                console.log(contoursExternal.get(i).matSize[0])\r\n                avoid++;\r\n            }\r\n        }\r\n        console.log(\"Avoid: \" + avoid)\r\n        //avoid = 0;\r\n        for (let i = avoid; i < contours.size(); ++i) {\r\n            //console.log(contours.get(i).matSize[0])\r\n\r\n            //console.log(contours.get(i))\r\n            if(contours.get(i).matSize[0] > limit){\r\n                console.log(contours.get(i).matSize[0])\r\n                if(avoid === 0){\r\n                    \r\n                    let color = new window.cv.Scalar(Math.round(Math.random() * 255), Math.round(Math.random() * 255),\r\n                                            Math.round(Math.random() * 255));\r\n                    window.cv.drawContours(dst, contours, i, color, 0, window.cv.LINE_8, hierarchy, 100);\r\n                }else{\r\n                    avoid--;\r\n                }\r\n            }\r\n        }\r\n\r\n        window.cv.imshow('newCanvas', dst);\r\n        src.delete(); dst.delete(); contours.delete(); hierarchy.delete(); contoursExternal.delete(); hierarchyExternal.delete();\r\n        \r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n    handleExtremes = () => {\r\n\r\n        const isBlack = (ctx, x, y, down) => {\r\n            \r\n            /*let modX, modY;\r\n            if(down){\r\n                modX = -2;\r\n                modY = -2;\r\n            }else{\r\n                modX = 2;\r\n                modY = 2;\r\n            }\r\n\r\n            const matrix = ctx.getImageData(x + modX, y + modY, 10, 10)\r\n            const values = matrix.data;\r\n            let count = 0, all = 0;\r\n            for (let i=0; i<values.length; i++){\r\n                if(mod(i+1, 4) !==0){\r\n                    if(values[i] === 0) {\r\n                        count++;\r\n                    }\r\n                    all++;\r\n                }\r\n            }\r\n\r\n            const score = count/all;\r\n            if(score > 0.4){\r\n                console.log('X: ' + x + ' Y: ' + y)\r\n                console.log(score);\r\n            }\r\n\r\n            //const rgba = 'rgba(' + data[0] + ', ' + data[1] + ', ' + data[2] + ', ' + (data[3] / 255) + ')';\r\n            return score > 0.5;*/\r\n\r\n            const matrix = ctx.getImageData(x, y, 1, 1)\r\n            const data = matrix.data;\r\n\r\n            return data[0] !== 0 || data[1] !== 0 || data[2] !== 0 \r\n\r\n        }\r\n\r\n        if(this.state.imageLoaded && this.state.scriptLoaded){\r\n            const newCanvas = this.state.newCanvas\r\n            const ctx = newCanvas.getContext(\"2d\");\r\n\r\n            \r\n            var isBreak = false;\r\n            const tragus = this.props.points[2];\r\n            let posUp, posDown;\r\n\r\n            if(this.props.points[0].y < this.props.points[1].y){\r\n                posUp = this.props.points[0];\r\n                posDown = this.props.points[1];\r\n            }else{\r\n                posUp = this.props.points[1];\r\n                posDown = this.props.points[0];\r\n            }\r\n\r\n            const maxYUp = posUp.y - Math.abs(posUp.y - posDown.y)\r\n\r\n            const maxYDown = posDown.y + Math.abs(posUp.y - posDown.y)\r\n\r\n            const modMaxX = tragus.x > posUp.x ? (4) : (-4)\r\n            const maxX = posUp.x + modMaxX*Math.abs(tragus.x - posUp.x);\r\n            console.log(maxX);\r\n            console.log(maxYUp);\r\n            console.log(maxYDown);\r\n\r\n            let itMinX, itMaxX\r\n            if(modMaxX > 0){\r\n                itMinX = tragus.x;\r\n                itMaxX = maxX;\r\n            }else{\r\n                itMinX = maxX;\r\n                itMaxX = tragus.x;\r\n            }\r\n\r\n            for(var y = maxYUp; y < posUp.y; y+=1){\r\n                //console.log(y)\r\n                for(var x = itMinX; x < itMaxX; x+=1){\r\n                    \r\n                    //pixel = ctx.getImageData(x, y, 1, 1);\r\n                    //const data = pixel.data;\r\n                    \r\n                    //console.log(rgba);\r\n                    if(isBlack(ctx, x, y, false)){\r\n                        \r\n                            this.setState({\r\n                                extremeUp : {\r\n                                    x: x,\r\n                                    y: y,\r\n                                }\r\n                            })\r\n                            console.log(x);\r\n                            console.log(y);\r\n                            isBreak = true;\r\n                            break;\r\n                    }\r\n                }\r\n                if(isBreak)\r\n                    break;\r\n                \r\n            }\r\n\r\n            isBreak = false;\r\n            console.log('MaxX:' + maxX);\r\n            console.log('PosUp.x: ' + posUp.x)\r\n            for(var y1 = maxYDown; y1 >= posDown.y; y1-=1){\r\n                //console.log(y1)\r\n                for(var x1 = itMaxX; x1 >= itMinX; x1-=1){\r\n                    \r\n                    if(isBlack(ctx, x1, y1, true)){\r\n                            this.setState({\r\n                                extremeDown : {\r\n                                    x: x1,\r\n                                    y: y1,\r\n                                }\r\n                            })\r\n                            console.log(x1);\r\n                            console.log(y1);\r\n                            isBreak = true;\r\n                            break;\r\n                    }\r\n                }\r\n                if(isBreak)\r\n                    break;\r\n                \r\n            }\r\n\r\n            const scale = (Math.abs(tragus.y - y1)/ Math.abs(tragus.y - y))\r\n\r\n            const isOk = scale > 0.42 && scale < 0.72 ? ('OK') : ('NOT OK')\r\n\r\n            console.log('Scale: ' + scale)\r\n            console.log(isOk)\r\n\r\n            let pointUp = {id: this.state.baseId + 1, x: x, y: y, name: 'PE0' }\r\n            let pointDown = {id: this.state.baseId + 2, x: x1, y: y1, name: 'PE1'}\r\n                \r\n            let newPoints = [...this.props.points.slice(0,3), pointDown, pointUp];\r\n\r\n            newPoints = this.refreshNames(newPoints);\r\n\r\n            this.ctxMakeBackgroundAngImage(0);\r\n            newPoints.forEach(point => {\r\n                if (point != null) {\r\n                    this.ctxMakePoint(point);\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                //points: newPoints,\r\n                baseId: this.state.baseId + 2\r\n            }, () => {\r\n                this.props.updatePoints(newPoints)\r\n                .then(() => {\r\n                    this.drawLines();\r\n                });\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    drawLines = (paramPoints) => {\r\n\r\n        const points = paramPoints ? (paramPoints) : this.props.points;\r\n        if(points.length === 5){\r\n\r\n            this.calculateAndCtxMakeLine(points[0], points[1]);\r\n            this.calculateAndCtxMakeLine(points[3], points[4]);\r\n            this.calculateAndCtxMakeLine(points[2]);\r\n            this.calculateAndCtxMakeLine(points[3]);\r\n            this.calculateAndCtxMakeLine(points[4]);\r\n\r\n        }\r\n    }\r\n    \r\n    refreshNames = (points) => {\r\n        if(points.length === 1){\r\n            points[0].name = \"POS_UP\"\r\n        }\r\n        if(points.length > 1){\r\n            if(points[1].y > points[0].y) { \r\n                points[0].name = \"POS_UP\"\r\n                points[1].name = \"POS_DOWN\"\r\n            }else{\r\n                points[1].name = \"POS_UP\"\r\n                points[0].name = \"POS_DOWN\"\r\n            }\r\n        }\r\n\r\n        if(points.length > 2){\r\n            points[2].name = \"TR\"\r\n        }\r\n\r\n        if(points.length === 4){\r\n            points[3].name = \"EX_UP\"      \r\n        }\r\n        \r\n        if(points.length > 4){\r\n            if(points[4].y > points[3].y) { \r\n                points[3].name = \"EX_UP\"\r\n                points[4].name = \"EX_DOWN\"\r\n            }else{\r\n                points[4].name = \"EX_UP\"\r\n                points[3].name = \"EX_DOWN\"\r\n            }\r\n        }        \r\n\r\n        \r\n        return points;            \r\n    }\r\n\r\n\r\n    getMousePos = (canvas, evt) => {\r\n        var rect = canvas.getBoundingClientRect();\r\n        return { x: (evt.clientX - rect.left), y: (evt.clientY - rect.top) };\r\n    }\r\n\r\n    toWorld = (x, y) => {\r\n        const im = m.inverse(m)\r\n        let point = { x: x, y: y }\r\n        point = im.applyToPoint(point.x, point.y)\r\n        return point\r\n    }\r\n\r\n    isBetween = (mouse, point) => {\r\n        return Math.sqrt((point.x - mouse.x) ** 2 + (point.y - mouse.y) ** 2) < 3 * 1.5;\r\n    }\r\n    \r\n\r\n    handleCompute = () => {\r\n\r\n        const results = {id: Math.round(Math.random() * 255), name: 'halo ' + Math.round(Math.random() * 255)}\r\n        this.props.updateResults(results);\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n    \r\n        if(this.props.appState === 'position' && nextProps.appState === 'tragus'){ //1st -> 2nd\r\n            this.handleRotate();\r\n        }\r\n        \r\n        if(this.props.appState === 'tragus' && nextProps.appState === 'correction'){ //2nd -> 3rd\r\n            this.handleExtremes();\r\n        }\r\n\r\n        if(this.props.appState === 'correction' && nextProps.appState === 'export'){ //3rd -> 4th\r\n            this.handleCompute();\r\n        }\r\n\r\n        if(this.props.appState === 'export' && nextProps.appState === 'position'){ //4th -> 1st\r\n            this.setState({imageLoaded: false, theta: 0})\r\n            this.props.updatePoints([]);\r\n            this.props.updateResults([]);\r\n        }\r\n\r\n        if(this.props.appState === 'tragus' && nextProps.appState === 'position'){ //2nd -> 1st\r\n            this.props.updatePoints(this.props.points.slice(0,2))\r\n            .then(()=>{\r\n                this.handleCenterRestore();\r\n            })\r\n            \r\n        }\r\n\r\n        if(this.props.appState === 'correction' && nextProps.appState === 'tragus'){ //3rd -> 2nd\r\n            this.props.updatePoints(this.props.points.slice(0,3))\r\n            .then(() => {\r\n                this.deleteLinesAndRefresh();\r\n            })\r\n        }\r\n\r\n        if(this.props.appState === 'export' && nextProps.appState === 'correction'){ //4th -> 3rd\r\n            this.props.updateResults([]);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const imageLoaded = this.state.imageLoaded;\r\n\r\n        const photoLoader = this.props.appState === 'position' ? (\r\n            <LoadPhotoBox\r\n                onLoadStart={() => this.setState({ loading: true,  })}\r\n                onLoad={(event, file) => this.handleFileSelected(event, file, 0)}\r\n                icon={this.state.mainFileIcon}\r\n                fileName={this.state.fileName}\r\n            />\r\n        ) : (\r\n            null\r\n        )\r\n\r\n        const actionBar =  imageLoaded && this.props.appState !== 'export' ? (\r\n            <ActionBar />\r\n        ) : (\r\n            null\r\n        )\r\n        const imageContainer = imageLoaded ? (\r\n            <div>    \r\n                <div className=\"canvases\">\r\n                        <canvas id=\"canvas\" ref=\"canvas\" width={this.state.canvasWidth} height={this.state.canvasHeight} onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp} onMouseMove={this.handleMouseMove}/>\r\n                        <canvas id=\"newCanvas\" ref=\"newCanvas\" width={this.state.canvasWidth} height={this.state.canvasHeight}></canvas>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div className = \"com\" >\r\n                    <div className=\"card z-depth-0 project-summary\">\r\n                        <div className=\"card-content grey-text text-darken-3\">\r\n                            <span className=\"card-title\">Load the sample.</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n\r\n        const buttonContainer = imageLoaded ? (\r\n        \r\n                <div className=\"buttons\">\r\n                    <div className=\"row\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0 right\" onClick={this.handleRotate}>Rotate along two last points</button>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0 right\" onClick={this.handleExtremes}>Compute extremes</button>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0 right\" onClick={this.handleCenterRestore}>Restore to native position</button>\r\n                    </div>\r\n                </div>\r\n        ) : (\r\n            null\r\n        )\r\n\r\n        return (\r\n        \r\n        <div className=\"dashboard container\">\r\n            <Script\r\n                url=\"https://www.marvinj.org/releases/marvinj-0.7.js\"\r\n                onLoad={this.handleScriptLoad.bind(this)}\r\n            />\r\n            <Script\r\n                url=\"https://docs.opencv.org/4.1.0/opencv.js\"\r\n                onLoad={this.handleOpenCVLoad.bind(this)}\r\n            />\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    {/*buttonContainer*/}\r\n                    {photoLoader}\r\n                    {actionBar}\r\n                    {imageContainer}\r\n                </div>\r\n                    \r\n                 {/*12 columns on small screnn, 6 colums on medium screen - left half of screen*/}\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Slider \r\n                        handleExtremes = {this.handleExtremes}\r\n                        deletePoint = {this.deletePoint}\r\n                        handleExport = {this.handleExport}/>\r\n                    \r\n                </div> {/*one column gap*/}\r\n            </div>\r\n        </div>  \r\n        \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        appState: state.canvas.appState,\r\n        mode: state.canvas.mode,\r\n        points: state.canvas.points,\r\n        positionPoints: state.canvas.points.slice(0,2),\r\n        tragusPoints: state.canvas.points.slice(2,3),\r\n        extremePoints: state.canvas.points.slice(3,5)\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updatePoints: (points) => dispatch(updatePoints(points)),\r\n        updateResults: (results) => dispatch(updateResults(results))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\r\n","import React from 'react'\r\nimport  { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => //due to functional component - i have to add parameter props, and then attach dispatch to this param by mapping\r\n{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><NavLink to=\"/canvas\">Canvas</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li> {/*we re not going to anywhere --- props.signOut without brackets, doesnt fire, only association*/}\r\n            <li><NavLink to=\"/\" className='btn btn-floating pink lighten-1'>{props.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initials: state.firebase.profile.initials\r\n    } //netNinja chose specifing profile in parent comp, and passing it as a prop\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch ( {type: \"LOGIN_SUCCESS\"})\r\n        }).catch((err) => {\r\n            dispatch( {type: \"LOGIN_ERROR\", err})\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then (() =>{\r\n            dispatch( {type: \"SIGNOUT_SUCCESS\"})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {//Fb new user, Fs communicate with store\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {//getting id from resp object instead of add()\r\n            //if there is no collection 'users' firebase make it new\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() =>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport  { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () =>\r\n{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default SignedOutLinks","import React from 'react'\r\nimport  { Link } from 'react-router-dom'\r\nimport SignedInLinks from \"./SignedInLinks\"\r\nimport SignedOutLinks from \"./SignedOutLinks\"\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth } = props;\r\n    //we d like to check existing uid, and control visibility of nav links\r\n    const links = auth.uid ? <SignedInLinks/> : <SignedOutLinks/>\r\n    return (\r\n        <nav className=\"nav wrapper grey darken-3\">\r\n            <div className=\"containter\">\r\n                <Link to=\"/\" className=\"brand-logo center\">MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        auth: state.firebase.auth //connecting to firebaseReducer by rootReducer (Redux global state), and using auth prop\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    //we re going to create cloud function that's going to react to someone signing up or creating a project\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul>\r\n                        {props.notifications && props.notifications.map((item) => {\r\n                            //permissions things!\r\n                            return (\r\n                                <li key= {item.id}> {/*need to access specified notif */}\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>    \r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>{project.content}</p>\r\n                <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectLists = ({projects}) => { //need to nest project content in ProjectSummary\r\n    \r\n    const projectList = projects ? (\r\n        projects.map(project => { //filter is to rewrting under condition, here good is map\r\n            return(\r\n                <Link to={'/project/' + project.id} key={project.id}> {/*here is id from db */}\r\n                    <ProjectSummary project={project} /> {/*remember about key - key have to be in parent element, in this case Link*/}\r\n                </Link>\r\n            ) \r\n        })\r\n    ) : (\r\n        <span>There is no projects my lord!</span>\r\n    )\r\n\r\n    //net Ninja - do it like:\r\n    // {projects && projects.map(project => {  //first con checks existing\r\n\r\n    //}} inside div project list section\r\n    \r\n    return (\r\n        //in future: global list of projects from redux by param: {projects}, passed here\r\n        <div className=\"project list section\">\r\n           {projectList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectLists;","import React, { Component } from 'react'\r\nimport video from './video.mp4'\r\nclass ExtraContent extends Component {\r\n\r\n  state = {\r\n    dimensions: null,\r\n    active: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.handleResize();\r\n    window.addEventListener('resize', this.handleResize)\r\n    \r\n  }\r\n  componentWillUnmount(){ \r\n    \r\n    window.removeEventListener('resize', this.handleResize)\r\n    \r\n  }\r\n\r\n  handleResize = () => {\r\n    this.setState({\r\n      dimensions: {\r\n        width: 0.87 * this.container.offsetWidth,\r\n        height: 0.87 * this.container.offsetWidth * 9 / 16,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleButton = () => {\r\n    this.setState({\r\n      active: true\r\n    })\r\n\r\n  }\r\n\r\n  renderVideo = () => {\r\n    return (\r\n      <video width={this.state.dimensions.width} height={this.state.dimensions.height} controls >\r\n        <source src={video} type=\"video/mp4\"/>\r\n      </video>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    \r\n    const buttonArea = !this.state.active ? (\r\n      <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\" onClick = {this.handleButton}>Unlock your extra content</button>\r\n      </div>\r\n    ) : (null)\r\n\r\n    return (\r\n      <div className=\"section\" ref={(el) => (this.container = el)}>\r\n            <div className=\"card z-depth-0\" >\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Your extra content!</span>\r\n                    <ul>\r\n                    {this.state.active && this.state.dimensions && this.renderVideo()}\r\n                    </ul>\r\n                    {buttonArea}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExtraContent\r\n","import React, {Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport ExtraContent from '../extras/ExtraContent'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    \r\n    \r\n\r\n    render(){\r\n        \r\n        if(!this.props.auth.uid) return <Redirect to = '/signin' />\r\n        \r\n        \r\n        console.log(this.props)\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\"> {/* two different sections - materialize css*/}\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects = {this.props.projects}/>\r\n                    </div> {/*12 columns on small screnn, 6 colums on medium screen - left half of screen*/}\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications = {this.props.notifications}/>\r\n                        <ExtraContent />\r\n                    </div> {/*one column gap*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => { //taking from global Redux to Dashboard props\r\n    console.log(state)\r\n    return { //we dont need to add parenthesis - hwvr can be: return ({})\r\n        projects: state.firestore.ordered.projects, //old: state is store, project is in rootRed, projects in projectRed\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n        //new: firestore has props ordered, when it has chosen collection below\r\n    }\r\n}\r\n\r\n//to use two different hoc, we have to use compose func\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([ //here we can order things by  time\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n        //when this comp is ative, the collection I listen to is the project collection\r\n        //and whenever this comp first loads, or firestore data is changed in the database online, this one now induce\r\n        //the firestore reducer to sync this store state with the project collection\r\n    ]))(Dashboard)\r\n\r\n    //npm run build - build app and put in build folder\r\n    //we have to relocate build to dist due to ninja sucker mistake xdd\r\n    //firebase deploy to dist, cause of spefication before","import React from 'react'//rce - make class, rfe - make func\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {//there is props connected with Router\r\n    //const id = props.match.params.id\r\n    if(!props.auth.uid) return <Redirect to='/signin' />\r\n    \r\n    console.log(props)\r\n    const project = props.project\r\n    if(project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title} </span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>{project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div> {/*didnt work, due to lack of prop 'createdAt' in first dummy doc! AND\r\n                    it has to be .toDate() cause of timestamp format, and .toString() then\r\n                    we ve installed 'moment' librasy to easy handle this task*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects //does not have to be ordered - just id finder\r\n    const project = projects ? projects[id] : null\r\n    //console.log(state)\r\n    //if(projects)\r\n    //    console.log(projects[id])\r\n    return {\r\n        //project: projects.find((project) => {\r\n        //    return project.id === id\r\n        //}) finder doesnt work due to other id methodology\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleSumbit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n        //console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.auth.uid) return <Redirect to='/' />\r\n        const { authError } = this.props\r\n        return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSumbit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className=\"input-field\"> {/*materialize gives here space*/}\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\"> {/*materialize gives here space*/}\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{authError}</p> : null //the same by if below - :<\r\n                        /*() => {\r\n                            if(authError){\r\n                                return(\r\n                                    <p>{authError}</p>\r\n                                )\r\n                            }else{\r\n                                return null\r\n                            }\r\n                        })*/}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError, // auth in rootReducer, authError in authReducer, state global Redux store\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleSumbit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n        //console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.auth.uid) return <Redirect to='/' />\r\n        return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSumbit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className=\"input-field\"> {/*materialize gives here space*/}\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\"> {/*materialize gives here space*/}\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\"> {/*materialize gives here space*/}\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\"> {/*materialize gives here space*/}\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    <div className=\"red-text center\">\r\n                        { this.props.authError ? <p>{this.props.authError}</p> : null }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: \"\",\r\n        content: \"\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleSumbit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.createProject(this.state) //not this.state.project - there is no property, now we pass state with two fields\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.props.auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSumbit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                <div className=\"input-field\"> {/*materialize gives here space*/}\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\"> {/*materialize gives here space*/}\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    //return {\r\n        //we used to doin\r\n        //type: 'ADD_PROJECT',\r\n        //project: project\r\n\r\n    //}\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => { //in curly bracers - extra args\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        //adding document through collection\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project, //all field covered in project object (id, title, content)\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => { //only fire when completed\r\n            dispatch({type: 'CREATE_PROJECT', project: project})\r\n        }).catch((err) => {\r\n            dispatch({type : 'CREATE_PROJECT_ERROR', err})\r\n        }) \r\n        \r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport {changeMode} from '../../store/actions/canvasActions'\r\n\r\nconst styles = theme => ({\r\n    toggleContainer: {\r\n      height: 56,\r\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      margin: `${theme.spacing.unit}px 0`,\r\n      //background: theme.palette.background.default,\r\n    },\r\n  });\r\n\r\n\r\n\r\nclass ActionBar extends Component {\r\n\r\nhandleMode = (e, mode) => {\r\n    this.props.changeMode(mode)\r\n}\r\n    \r\n  render() {\r\n    const mode = this.props.mode;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.toggleContainer}>\r\n            <ToggleButtonGroup value={mode} exclusive onChange={this.handleMode}>\r\n                <ToggleButton value=\"moving\">\r\n                    <i class=\"material-icons\">open_with</i>\r\n                </ToggleButton>\r\n                <ToggleButton value=\"addition\">\r\n                    <i class=\"material-icons\">touch_app</i>\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        mode: state.canvas.mode\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeMode: (mode) => dispatch(changeMode(mode))\r\n    }\r\n}\r\n\r\nActionBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ActionBar))\r\n","export const changeMode = (mode) => {\r\n    return {\r\n        type: 'CHANGE_MODE',\r\n        mode: mode\r\n    }\r\n}\r\n\r\nexport const updatePoints = (points) => {\r\n    return dispatch => {\r\n      return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type: 'UPDATE_POINTS',\r\n            points: points\r\n        });\r\n  \r\n        resolve()\r\n      });\r\n    }\r\n}\r\n\r\nexport const updateAppState = (appState) => {\r\n    return dispatch => {\r\n      return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type: 'UPDATE_APP_STATE',\r\n            appState: appState\r\n        });\r\n  \r\n        resolve()\r\n      });\r\n    }\r\n}\r\n\r\nexport const updateResults = (results) => {\r\n    return dispatch => {\r\n      return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type: 'UPDATE_RESULTS',\r\n            results: results\r\n        });\r\n  \r\n        resolve()\r\n      });\r\n    }\r\n}\r\n\r\n\r\nexport const exportResults = (results) => {\r\n    return dispatch => {\r\n      return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type: 'EXPORT_RESULTS',\r\n            results: results\r\n        });\r\n  \r\n        resolve()\r\n      });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\n//import styled from 'styled-components'\nimport FileInput from 'react-simple-file-input'\n//import ImageUploader from 'react-images-upload';\n\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n/*const Label = styled.label`\ncursor: pointer;\nflex-basis: 100%;\ndisplay: flex;\nflex-direction: row;\njustify-content: space-around;\nalign-items: center;\n`\n\nconst ImageFileInput = styled(FileInput)`\ndisplay: none; \n`\n\nconst FileName = styled.span`\nbox-shadow: 2px 2px 4px 0px rgba(0, 0, 0, 0.3);\nflex-basis: 80%;\ntext-align: center;\npadding: 10px;\n`\n/*const FileIcon = styled(FontAwesomeIcon)`\nfont-size: 2em;\n`*/\n\nconst allowedFileTypes = [\"image/png\", \"image/jpeg\", \"image/gif\", \"image/bmp\"];\nconst fileIsIncorrectFiletype = (file) => {\n    if (allowedFileTypes.indexOf(file.type) === -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\nconst LoadPhotoBox = (props) => {\n    return (\n        <label>\n            <FileInput\n            accept=\"image/*\"\n                readAs='dataUrl'\n                onLoadStart={props.onLoadStart}\n                onLoad={props.onLoad}\n                cancelIf={fileIsIncorrectFiletype}\n            />\n\n            {/*<FileIcon icon={props.icon} />*/}\n\n            <span>\n                {/*props.fileName*/}\n            </span>\n        </label>\n        \n    )\n}\n\nexport default LoadPhotoBox\n","import React from 'react'\r\n\r\n\r\nconst PointList = ({points, deletePoint}) => {\r\n\r\n\r\n    //console.log(props);\r\n\r\n    //const points = props.points;\r\n\r\n    const pointList = points ? (\r\n        points.map(point => { //filter is to rewrting under condition, here good is map\r\n            return(\r\n                <div className = \"point\" key = {point.id}>\r\n                    <div className=\"card z-depth-0 project-summary\">\r\n                        <div className=\"card-content grey-text text-darken-3\">\r\n                            <span className=\"card-title\">{point.name}</span>\r\n                            <p>X = {point.x}</p>\r\n                            <p>Y = {point.y}</p>\r\n                            <button className=\"btn pink lighten-1 z-depth-0 right\" onClick={() => deletePoint(point.id)}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) \r\n        })\r\n    ) : (\r\n        <span>There is no points!</span>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {pointList}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default (PointList)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport PointList from './PointList'\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { virtualize, bindKeyboard } from 'react-swipeable-views-utils';\r\nimport { mod } from 'react-swipeable-views-core';\r\nimport {updateAppState} from '../../store/actions/canvasActions'\r\nimport {exportResults} from '../../store/actions/canvasActions'\r\n\r\n\r\nconst VirtualizeSwipeableViews = bindKeyboard(virtualize(SwipeableViews));\r\n\r\nconst stylesSlides = {\r\n    slide: {\r\n      padding: 15,\r\n      minHeight: 100,\r\n      color: '#fff',\r\n    },\r\n    slide1: {\r\n      backgroundColor: '#FEA900',\r\n    },\r\n    slide2: {\r\n      backgroundColor: '#B3DC4A',\r\n    },\r\n    slide3: {\r\n      backgroundColor: '#6AC0FF',\r\n    },\r\n  };\r\n\r\nclass Slider extends Component {\r\n\r\n    state = {\r\n        slideIndex: 0,\r\n    }\r\n\r\n\r\n    handleChangeSlideIndex = slideIndex => {\r\n        this.setState({\r\n            slideIndex: slideIndex,\r\n        });\r\n    };\r\n\r\n    switchNewAppState = (newIndex) => {\r\n        switch (newIndex) {\r\n            case 0:\r\n                this.props.updateAppState('position');\r\n                break;\r\n            case 1:\r\n                this.props.updateAppState('tragus');\r\n                break;\r\n            case 2:\r\n                this.props.updateAppState('correction');\r\n                break;\r\n            case 3:\r\n                this.props.updateAppState('export');\r\n                break;\r\n            default:\r\n                this.props.updateAppState('position')  \r\n        } \r\n    }\r\n\r\n    handleSlideBack = () => {\r\n        const currentIndex = this.state.slideIndex;\r\n        const newIndex = currentIndex !== 0 ? (currentIndex-1) : (currentIndex);\r\n\r\n        this.switchNewAppState(newIndex);\r\n        \r\n        this.setState({\r\n            slideIndex: newIndex,\r\n        });  \r\n        \r\n        \r\n    };\r\n\r\n    handleSlideNext = () => {\r\n        const currentIndex = this.state.slideIndex;\r\n        const newIndex = currentIndex !== 3 ? (currentIndex + 1) : (0);\r\n        \r\n        this.switchNewAppState(newIndex);\r\n        \r\n\r\n        this.setState({\r\n            slideIndex: newIndex,\r\n        });\r\n        \r\n        if(currentIndex === 3) {\r\n            this.setState({\r\n                exported: false\r\n            }); \r\n        }\r\n        \r\n        \r\n    };\r\n  \r\n    handleDeletePoint = (id) => {\r\n        console.log(this.props);\r\n        console.log('halo');\r\n        this.props.deletePoint(id);\r\n    }\r\n\r\n    newSample = () => {\r\n        return (\r\n            <button className=\"btn pink lighten-1 z-depth-0 right\" onClick={this.handleSlideNext}>New sample</button>\r\n        )\r\n    }\r\n\r\n    handleExport = () => {\r\n        this.props.exportResults(this.props.results)\r\n        .then(() =>{\r\n            this.setState({\r\n                exported: true\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const exportString = !this.state.exported ? (\r\n            <div>Export</div> \r\n        ) : (  \r\n            <div>Export again</div>      \r\n        )\r\n\r\n        const makeContent = (params) => {\r\n            const { index } = params;\r\n            switch (index) {\r\n                default:\r\n                    return (\r\n                        <div>\r\n                            <p>Add two positioning points.</p>\r\n                            <PointList points={this.props.positionPoints} deletePoint= {this.handleDeletePoint}/>\r\n                        </div>\r\n                        \r\n                    );\r\n                case 1:\r\n                    return (\r\n                        <div>\r\n                            <p>Add point in the half height of the tragus.</p>\r\n                            <PointList points={this.props.tragusPoints} deletePoint= {this.handleDeletePoint} />\r\n                        </div>\r\n                        \r\n                    );\r\n                case 2:\r\n                    return (\r\n                        <div>\r\n                            <p>Optionally, correct extreme ear points.</p>\r\n                            <div className=\"row\">\r\n                                <button className=\"btn pink lighten-1 z-depth-0 right\" onClick={() => this.props.handleExtremes()}>Compute extremes again</button>\r\n                            </div>\r\n                            <PointList points={this.props.extremePoints} deletePoint= {this.handleDeletePoint} />\r\n                        </div>\r\n                        \r\n                    );\r\n                case 3:\r\n                    return (\r\n                        <div>\r\n                            <p>Export results to database.</p>\r\n                            <div className=\"card z-depth-0 project-summary\">\r\n                                <div className=\"card-content grey-text text-darken-3\">\r\n                                    <span className=\"card-title\">Results</span>\r\n                                    <p>Something: {this.props.results.id}</p>\r\n                                    <p>Name:  {this.props.results.name}</p>\r\n                                    <button className=\"btn pink lighten-1 z-depth-0 right\" onClick={this.handleExport}>{exportString}</button>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        \r\n                    );\r\n                        \r\n            } \r\n            \r\n        }\r\n\r\n        \r\n\r\n        const slideRenderer = (params) => {\r\n            const { index, key } = params;\r\n            let style;\r\n            const content = makeContent(params)\r\n            \r\n            switch (mod(index, 3)) {\r\n              case 0:\r\n                style = stylesSlides.slide1;\r\n                break;\r\n          \r\n              case 1:\r\n                style = stylesSlides.slide2;\r\n                break;\r\n        \r\n              case 2:\r\n                style = stylesSlides.slide3;\r\n                break;\r\n          \r\n              default:\r\n                break;\r\n            }\r\n\r\n            const nextButtonConditions = () => {\r\n                \r\n                switch (this.state.slideIndex) {\r\n                    case 0:\r\n                        return this.props.positionPoints.length === 2;\r\n                    case 1:\r\n                        return this.props.tragusPoints.length === 1;\r\n                    case 2:\r\n                        return this.props.extremePoints.length === 2;\r\n                    case 3:\r\n                        return false;\r\n                    default:\r\n                        return true; \r\n                } \r\n            }\r\n\r\n            const nextButton = nextButtonConditions() ? (\r\n                <button className=\"btn pink lighten-1 z-depth-0 right\" onClick={this.handleSlideNext}>Next</button>\r\n            ) : (\r\n                null\r\n            )\r\n\r\n            const backButton = this.state.slideIndex > 0 ? (\r\n                <button className=\"btn pink lighten-1 z-depth-0 left\" onClick={this.handleSlideBack}>Back</button>\r\n            ) : (\r\n                null\r\n            )\r\n        \r\n            return (\r\n                <div style={Object.assign({}, stylesSlides.slide, style)} key={key}>\r\n                    {backButton}\r\n                    {this.state.slideIndex === 3 && this.state.exported && this.newSample()}\r\n                    {nextButton}\r\n                    <br></br>\r\n                    {content}\r\n                </div>\r\n                );\r\n        }\r\n\r\n    return (\r\n        <div>\r\n            <VirtualizeSwipeableViews\r\n                            index={this.state.slideIndex}\r\n                            onChangeIndex={this.handleChangeSlideIndex}\r\n                            slideRenderer={slideRenderer}\r\n            />\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        positionPoints: state.canvas.points.slice(0,2),\r\n        tragusPoints: state.canvas.points.slice(2,3),\r\n        extremePoints: state.canvas.points.slice(3,5),\r\n        results: state.canvas.results\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateAppState: (appState) => dispatch(updateAppState(appState)),\r\n        exportResults: (results) => dispatch(exportResults(results))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Slider)\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Navbar from \"./components/layout/Navbar\"\nimport Dashboard from \"./components/dashboard/Dashboard\"\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject';\nimport Canvas from './components/extras/Canvas'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path = '/' component={Dashboard} />\n            <Route path = '/project/:id' component={ProjectDetails}/>\n            <Route path = '/signin' component={SignIn}/>\n            <Route path = '/signup' component={SignUp}/>\n            <Route path = '/create' component={CreateProject}/>\n            <Route path = '/canvas' component={Canvas}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type){ //it ll generate thing to authReducer not firebaseReducer remember!\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'LOGOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log(\"signup success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log(\"signup error\")\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'hehe1', content: 'blaasasa'},\r\n        {id: '2', title: 'hehe2', content: 'blaasasa'},\r\n        {id: '3', title: 'hehe3', content: 'blaasasa'}\r\n    ]\r\n    \r\n};\r\n\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            /*console.log('created project', action.project)\r\n            let newProjects = [...state.projects, action.project]\r\n            return {\r\n                ...state,\r\n                projects: newProjects\r\n            };this works as adding content to store - we d like to sync it with db*/\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default projectReducer","const initState = {\r\n    appState: 'position',\r\n    mode: 'moving',\r\n    points : [],\r\n    results : [],\r\n    \r\n};\r\n\r\n\r\nconst canvasReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CHANGE_MODE':\r\n            \r\n            return {\r\n                ...state,\r\n                mode: action.mode\r\n            }\r\n            \r\n        case 'UPDATE_POINTS':\r\n            return {\r\n                ...state,\r\n                points: action.points\r\n            }\r\n        case 'UPDATE_APP_STATE':\r\n            return {\r\n                ...state,\r\n                appState: action.appState\r\n            }\r\n        case 'UPDATE_RESULTS':\r\n            return {\r\n                ...state,\r\n                results: action.results\r\n            }\r\n        case 'EXPORT_RESULTS':\r\n            return {\r\n                ...state,\r\n                //results: action.results\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default canvasReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers} from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore' //syncing data with state, in background\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport canvasReducer from './canvasReducer'\r\n\r\n\r\nconst rootReducer = combineReducers( {\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer, //data depends on component activity\r\n    firebase: firebaseReducer, //sinking firebase info, including auth state\r\n    canvas: canvasReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app' //base func\r\nimport 'firebase/firestore' //DB\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyD0gZiNi1lZRdXvKN_WCt-jiwGiJVI-tVQ\",\r\n    authDomain: \"ashad912-marioplan.firebaseapp.com\",\r\n    databaseURL: \"https://ashad912-marioplan.firebaseio.com\",\r\n    projectId: \"ashad912-marioplan\",\r\n    storageBucket: \"ashad912-marioplan.appspot.com\",\r\n    messagingSenderId: \"248850659528\"\r\n};\r\nfirebase.initializeApp(config);\r\n//firebase.firestore().settings({timestampsInSnapshots: true}) \r\n//avoiding truncation during calling Date (firebase return Timestamp instead) - its not necessery now\r\n\r\nexport default firebase;\r\n\r\n/*\r\n\r\nFirestore is NoSQL database\r\nCollection (projects):\r\ndoc1\r\ndoc2 -> title: 'house party!'   content: 'bla'  authorFirstName: .... <- fields\r\ndoc3\r\ndoc4\r\n\r\n*/\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux' // to enable store func\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider} from 'react-redux' //to wire reducer to App, and choose store\nimport thunk from 'redux-thunk' //for asynchronous things\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\n//there is need to use store enhancers with join firebase and firestore with our project\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig), \n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users',  attachAuthIsReady : true}) //now firebase (more precisly: funcs getFirebase and getFirestore) knows about config in projects\n    ) //useFirestoneForProfile load extra props to firebase.profile - things like props logged user\n);  //thing like logged user, due to showing enhancer which collection is assiociated with userProfile - next param\n//attach... app waits to auth init done\n//in middleware we manage the asynchronous things - we added to thunk Firebase things\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}